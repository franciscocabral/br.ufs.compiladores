/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.node;

import expression.analysis.*;

@SuppressWarnings("nls")
public final class AFatorAritmeticoFatorAritmetico extends PFatorAritmetico
{
    private PFatorAritmetico _fatorAritmetico_;
    private PMultiplicacao _multiplicacao_;
    private PParenteses _parenteses_;

    public AFatorAritmeticoFatorAritmetico()
    {
        // Constructor
    }

    public AFatorAritmeticoFatorAritmetico(
        @SuppressWarnings("hiding") PFatorAritmetico _fatorAritmetico_,
        @SuppressWarnings("hiding") PMultiplicacao _multiplicacao_,
        @SuppressWarnings("hiding") PParenteses _parenteses_)
    {
        // Constructor
        setFatorAritmetico(_fatorAritmetico_);

        setMultiplicacao(_multiplicacao_);

        setParenteses(_parenteses_);

    }

    @Override
    public Object clone()
    {
        return new AFatorAritmeticoFatorAritmetico(
            cloneNode(this._fatorAritmetico_),
            cloneNode(this._multiplicacao_),
            cloneNode(this._parenteses_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFatorAritmeticoFatorAritmetico(this);
    }

    public PFatorAritmetico getFatorAritmetico()
    {
        return this._fatorAritmetico_;
    }

    public void setFatorAritmetico(PFatorAritmetico node)
    {
        if(this._fatorAritmetico_ != null)
        {
            this._fatorAritmetico_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fatorAritmetico_ = node;
    }

    public PMultiplicacao getMultiplicacao()
    {
        return this._multiplicacao_;
    }

    public void setMultiplicacao(PMultiplicacao node)
    {
        if(this._multiplicacao_ != null)
        {
            this._multiplicacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplicacao_ = node;
    }

    public PParenteses getParenteses()
    {
        return this._parenteses_;
    }

    public void setParenteses(PParenteses node)
    {
        if(this._parenteses_ != null)
        {
            this._parenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteses_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fatorAritmetico_)
            + toString(this._multiplicacao_)
            + toString(this._parenteses_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fatorAritmetico_ == child)
        {
            this._fatorAritmetico_ = null;
            return;
        }

        if(this._multiplicacao_ == child)
        {
            this._multiplicacao_ = null;
            return;
        }

        if(this._parenteses_ == child)
        {
            this._parenteses_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fatorAritmetico_ == oldChild)
        {
            setFatorAritmetico((PFatorAritmetico) newChild);
            return;
        }

        if(this._multiplicacao_ == oldChild)
        {
            setMultiplicacao((PMultiplicacao) newChild);
            return;
        }

        if(this._parenteses_ == oldChild)
        {
            setParenteses((PParenteses) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
