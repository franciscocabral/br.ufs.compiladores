/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.node;

import expression.analysis.*;

@SuppressWarnings("nls")
public final class AFatorRelacionalFatorRelacional extends PFatorRelacional
{
    private PFatorRelacional _fatorRelacional_;
    private PSinalRelacional _sinalRelacional_;
    private PTermoAritmetico _termoAritmetico_;

    public AFatorRelacionalFatorRelacional()
    {
        // Constructor
    }

    public AFatorRelacionalFatorRelacional(
        @SuppressWarnings("hiding") PFatorRelacional _fatorRelacional_,
        @SuppressWarnings("hiding") PSinalRelacional _sinalRelacional_,
        @SuppressWarnings("hiding") PTermoAritmetico _termoAritmetico_)
    {
        // Constructor
        setFatorRelacional(_fatorRelacional_);

        setSinalRelacional(_sinalRelacional_);

        setTermoAritmetico(_termoAritmetico_);

    }

    @Override
    public Object clone()
    {
        return new AFatorRelacionalFatorRelacional(
            cloneNode(this._fatorRelacional_),
            cloneNode(this._sinalRelacional_),
            cloneNode(this._termoAritmetico_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFatorRelacionalFatorRelacional(this);
    }

    public PFatorRelacional getFatorRelacional()
    {
        return this._fatorRelacional_;
    }

    public void setFatorRelacional(PFatorRelacional node)
    {
        if(this._fatorRelacional_ != null)
        {
            this._fatorRelacional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fatorRelacional_ = node;
    }

    public PSinalRelacional getSinalRelacional()
    {
        return this._sinalRelacional_;
    }

    public void setSinalRelacional(PSinalRelacional node)
    {
        if(this._sinalRelacional_ != null)
        {
            this._sinalRelacional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sinalRelacional_ = node;
    }

    public PTermoAritmetico getTermoAritmetico()
    {
        return this._termoAritmetico_;
    }

    public void setTermoAritmetico(PTermoAritmetico node)
    {
        if(this._termoAritmetico_ != null)
        {
            this._termoAritmetico_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoAritmetico_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fatorRelacional_)
            + toString(this._sinalRelacional_)
            + toString(this._termoAritmetico_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fatorRelacional_ == child)
        {
            this._fatorRelacional_ = null;
            return;
        }

        if(this._sinalRelacional_ == child)
        {
            this._sinalRelacional_ = null;
            return;
        }

        if(this._termoAritmetico_ == child)
        {
            this._termoAritmetico_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fatorRelacional_ == oldChild)
        {
            setFatorRelacional((PFatorRelacional) newChild);
            return;
        }

        if(this._sinalRelacional_ == oldChild)
        {
            setSinalRelacional((PSinalRelacional) newChild);
            return;
        }

        if(this._termoAritmetico_ == oldChild)
        {
            setTermoAritmetico((PTermoAritmetico) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
