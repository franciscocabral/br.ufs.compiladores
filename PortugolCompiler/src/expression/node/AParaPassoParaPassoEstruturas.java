/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.node;

import expression.analysis.*;

@SuppressWarnings("nls")
public final class AParaPassoParaPassoEstruturas extends PParaPassoEstruturas
{
    private TPara _para_;
    private PVariavel _variavel_;
    private TDe _de_;
    private TInteiro _inteiro_;
    private PAteEstrutura _ateEstrutura_;
    private PPassoEstruturas _passoEstruturas_;
    private TFaca _faca_;
    private PBlocoComando _blocoComando_;
    private TFimPara _fimPara_;
    private TPontovirgula _pontovirgula_;

    public AParaPassoParaPassoEstruturas()
    {
        // Constructor
    }

    public AParaPassoParaPassoEstruturas(
        @SuppressWarnings("hiding") TPara _para_,
        @SuppressWarnings("hiding") PVariavel _variavel_,
        @SuppressWarnings("hiding") TDe _de_,
        @SuppressWarnings("hiding") TInteiro _inteiro_,
        @SuppressWarnings("hiding") PAteEstrutura _ateEstrutura_,
        @SuppressWarnings("hiding") PPassoEstruturas _passoEstruturas_,
        @SuppressWarnings("hiding") TFaca _faca_,
        @SuppressWarnings("hiding") PBlocoComando _blocoComando_,
        @SuppressWarnings("hiding") TFimPara _fimPara_,
        @SuppressWarnings("hiding") TPontovirgula _pontovirgula_)
    {
        // Constructor
        setPara(_para_);

        setVariavel(_variavel_);

        setDe(_de_);

        setInteiro(_inteiro_);

        setAteEstrutura(_ateEstrutura_);

        setPassoEstruturas(_passoEstruturas_);

        setFaca(_faca_);

        setBlocoComando(_blocoComando_);

        setFimPara(_fimPara_);

        setPontovirgula(_pontovirgula_);

    }

    @Override
    public Object clone()
    {
        return new AParaPassoParaPassoEstruturas(
            cloneNode(this._para_),
            cloneNode(this._variavel_),
            cloneNode(this._de_),
            cloneNode(this._inteiro_),
            cloneNode(this._ateEstrutura_),
            cloneNode(this._passoEstruturas_),
            cloneNode(this._faca_),
            cloneNode(this._blocoComando_),
            cloneNode(this._fimPara_),
            cloneNode(this._pontovirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParaPassoParaPassoEstruturas(this);
    }

    public TPara getPara()
    {
        return this._para_;
    }

    public void setPara(TPara node)
    {
        if(this._para_ != null)
        {
            this._para_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._para_ = node;
    }

    public PVariavel getVariavel()
    {
        return this._variavel_;
    }

    public void setVariavel(PVariavel node)
    {
        if(this._variavel_ != null)
        {
            this._variavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variavel_ = node;
    }

    public TDe getDe()
    {
        return this._de_;
    }

    public void setDe(TDe node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public TInteiro getInteiro()
    {
        return this._inteiro_;
    }

    public void setInteiro(TInteiro node)
    {
        if(this._inteiro_ != null)
        {
            this._inteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inteiro_ = node;
    }

    public PAteEstrutura getAteEstrutura()
    {
        return this._ateEstrutura_;
    }

    public void setAteEstrutura(PAteEstrutura node)
    {
        if(this._ateEstrutura_ != null)
        {
            this._ateEstrutura_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ateEstrutura_ = node;
    }

    public PPassoEstruturas getPassoEstruturas()
    {
        return this._passoEstruturas_;
    }

    public void setPassoEstruturas(PPassoEstruturas node)
    {
        if(this._passoEstruturas_ != null)
        {
            this._passoEstruturas_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passoEstruturas_ = node;
    }

    public TFaca getFaca()
    {
        return this._faca_;
    }

    public void setFaca(TFaca node)
    {
        if(this._faca_ != null)
        {
            this._faca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._faca_ = node;
    }

    public PBlocoComando getBlocoComando()
    {
        return this._blocoComando_;
    }

    public void setBlocoComando(PBlocoComando node)
    {
        if(this._blocoComando_ != null)
        {
            this._blocoComando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocoComando_ = node;
    }

    public TFimPara getFimPara()
    {
        return this._fimPara_;
    }

    public void setFimPara(TFimPara node)
    {
        if(this._fimPara_ != null)
        {
            this._fimPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPara_ = node;
    }

    public TPontovirgula getPontovirgula()
    {
        return this._pontovirgula_;
    }

    public void setPontovirgula(TPontovirgula node)
    {
        if(this._pontovirgula_ != null)
        {
            this._pontovirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontovirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._para_)
            + toString(this._variavel_)
            + toString(this._de_)
            + toString(this._inteiro_)
            + toString(this._ateEstrutura_)
            + toString(this._passoEstruturas_)
            + toString(this._faca_)
            + toString(this._blocoComando_)
            + toString(this._fimPara_)
            + toString(this._pontovirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._para_ == child)
        {
            this._para_ = null;
            return;
        }

        if(this._variavel_ == child)
        {
            this._variavel_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._inteiro_ == child)
        {
            this._inteiro_ = null;
            return;
        }

        if(this._ateEstrutura_ == child)
        {
            this._ateEstrutura_ = null;
            return;
        }

        if(this._passoEstruturas_ == child)
        {
            this._passoEstruturas_ = null;
            return;
        }

        if(this._faca_ == child)
        {
            this._faca_ = null;
            return;
        }

        if(this._blocoComando_ == child)
        {
            this._blocoComando_ = null;
            return;
        }

        if(this._fimPara_ == child)
        {
            this._fimPara_ = null;
            return;
        }

        if(this._pontovirgula_ == child)
        {
            this._pontovirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._para_ == oldChild)
        {
            setPara((TPara) newChild);
            return;
        }

        if(this._variavel_ == oldChild)
        {
            setVariavel((PVariavel) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TDe) newChild);
            return;
        }

        if(this._inteiro_ == oldChild)
        {
            setInteiro((TInteiro) newChild);
            return;
        }

        if(this._ateEstrutura_ == oldChild)
        {
            setAteEstrutura((PAteEstrutura) newChild);
            return;
        }

        if(this._passoEstruturas_ == oldChild)
        {
            setPassoEstruturas((PPassoEstruturas) newChild);
            return;
        }

        if(this._faca_ == oldChild)
        {
            setFaca((TFaca) newChild);
            return;
        }

        if(this._blocoComando_ == oldChild)
        {
            setBlocoComando((PBlocoComando) newChild);
            return;
        }

        if(this._fimPara_ == oldChild)
        {
            setFimPara((TFimPara) newChild);
            return;
        }

        if(this._pontovirgula_ == oldChild)
        {
            setPontovirgula((TPontovirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
