/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.analysis;

import java.util.*;
import expression.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStartStart(AStartStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdIdentficador(AIdIdentficador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoSimplesBlocoComando(AComandoSimplesBlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComandosBlocoComando(ABlocoComandosBlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoSimplesBlocoExpressao(AExpressaoSimplesBlocoExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoEspressoesBlocoExpressao(ABlocoEspressoesBlocoExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelSimplesBlocoVariavel(AVariavelSimplesBlocoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoVariaveisBlocoVariavel(ABlocoVariaveisBlocoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasoSimplesBlocoCaso(ACasoSimplesBlocoCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoCasosBlocoCaso(ABlocoCasosBlocoCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoSimplesBlocoDeclaracao(ADeclaracaoSimplesBlocoDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoDeclaracaoBlocoDeclaracao(ABlocoDeclaracaoBlocoDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramaInstanciaPrograma(AProgramaInstanciaPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoVariavelDeclaracao(ADeclaracaoVariavelDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoConstDeclaracao(ADeclaracaoConstDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipo(ARealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroTipo(AInteiroTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereTipo(ACaractereTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelVariavel(AVariavelVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelVetorVariavel(AVariavelVetorVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorRealValor(AValorRealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorInteiroValor(AValorInteiroValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorCaractereValor(AValorCaractereValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComando(AAtribuicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncoesComando(AFuncoesComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComando(ASeComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeEntaoComando(ASeEntaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvalieComando(AAvalieComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaComando(ARepitaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComando(AParaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaPassoComando(AParaPassoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoAtribuicoes(AAtribuicaoAtribuicoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeiaFuncoes(ALeiaFuncoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEscrevaFuncoes(AEscrevaFuncoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoSenaoEstruturas(ASenaoSenaoEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPassoPassoEstruturas(APassoPassoEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAteAteEstrutura(AAteAteEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSeEstruturas(ASeSeEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSenaoSeSenaoEstruturas(ASeSenaoSeSenaoEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvalieAvalieEstruturas(AAvalieAvalieEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoEnquantoEstruturas(AEnquantoEnquantoEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaRepitaEstruturas(ARepitaRepitaEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaParaEstruturas(AParaParaEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaPassoParaPassoEstruturas(AParaPassoParaPassoEstruturas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVezesMultiplicacao(AVezesMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivididoMultiplicacao(ADivididoMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestoMultiplicacao(ARestoMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisSoma(AMaisSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosSoma(AMenosSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorIgualSinalRelacional(AMaiorIgualSinalRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorIgualSinalRelacional(AMenorIgualSinalRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorSinalRelacional(AMaiorSinalRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorSinalRelacional(AMenorSinalRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualdadeSinalIgualgade(AIgualdadeSinalIgualgade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferencaSinalIgualgade(ADiferencaSinalIgualgade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuSinalLogicoOu(AOuSinalLogicoOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorSinalLogicoOu(AXorSinalLogicoOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAESinalLogicoE(AESinalLogicoE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANaoSinalLogicoNao(ANaoSinalLogicoNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomasExpressao(ASomasExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoExpressao(ATermoExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicacoesTermo(AMultiplicacoesTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorTermo(AFatorTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParentesesFator(AParentesesFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorFator(AValorFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarFator(AVarFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoLogicaExpressaoLogica(AExpressaoLogicaExpressaoLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoLogicoExpressaoLogica(ATermoLogicoExpressaoLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoLogicoTermoLogico(ATermoLogicoTermoLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorLogicoTermoLogico(AFatorLogicoTermoLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorLogicoFatorLogico(AFatorLogicoFatorLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoRelacionalFatorLogico(ATermoRelacionalFatorLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoRelacionalTermoRelacional(ATermoRelacionalTermoRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorRelacionalTermoRelacional(AFatorRelacionalTermoRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorRelacionalFatorRelacional(AFatorRelacionalFatorRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoAritmeticoFatorRelacional(ATermoAritmeticoFatorRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoAritmeticoTermoAritmetico(ATermoAritmeticoTermoAritmetico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorAritmeticoTermoAritmetico(AFatorAritmeticoTermoAritmetico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorAritmeticoFatorAritmetico(AFatorAritmeticoFatorAritmetico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoAritmeticoFatorAritmetico(ATermoAritmeticoFatorAritmetico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParentesesParenteses(AParentesesParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorParenteses(AValorParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarParenteses(AVarParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioFinal(TComentarioFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioCorpo(TComentarioCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRecebe(TRecebe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontovirgula(TPontovirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoispontos(TDoispontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTACochete(TACochete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFCochete(TFCochete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAParenteses(TAParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFParenteses(TFParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAChave(TAChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFChave(TFChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVezes(TVezes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDividido(TDividido node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTResto(TResto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorigual(TMenorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorigual(TMaiorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetorne(TRetorne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProximo(TProximo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscrevaln(TEscrevaln node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimSe(TFimSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimAvalie(TFimAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimEnquanto(TFimEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRepita(TRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDe(TDe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimPara(TFimPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNReal(TNReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNInteiro(TNInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNCaractere(TNCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
