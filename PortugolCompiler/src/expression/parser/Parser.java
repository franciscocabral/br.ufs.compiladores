/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.parser;

import expression.lexer.*;
import expression.node.*;
import expression.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AIdIdentficador */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AComandoSimplesBlocoComando */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce ABlocoComandosBlocoComando */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce AExpressaoSimplesBlocoExpressao */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce ABlocoEspressoesBlocoExpressao */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce AVariavelSimplesBlocoVariavel */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce ABlocoVariaveisBlocoVariavel */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce ACasoSimplesBlocoCaso */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce ABlocoCasosBlocoCaso */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce ADeclaracaoSimplesBlocoDeclaracao */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce ABlocoDeclaracaoBlocoDeclaracao */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce AProgramaInstanciaPrograma */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce ADeclaracaoVariavelDeclaracao */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce ADeclaracaoConstDeclaracao */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list, false);
            }
            break;
            case 15: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new15();
                push(goTo(9), list, false);
            }
            break;
            case 16: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new16();
                push(goTo(9), list, false);
            }
            break;
            case 17: /* reduce ACaractereTipo */
            {
                ArrayList<Object> list = new17();
                push(goTo(9), list, false);
            }
            break;
            case 18: /* reduce AVariavelVariavel */
            {
                ArrayList<Object> list = new18();
                push(goTo(10), list, false);
            }
            break;
            case 19: /* reduce AVariavelVetorVariavel */
            {
                ArrayList<Object> list = new19();
                push(goTo(10), list, false);
            }
            break;
            case 20: /* reduce AValorRealValor */
            {
                ArrayList<Object> list = new20();
                push(goTo(11), list, false);
            }
            break;
            case 21: /* reduce AValorInteiroValor */
            {
                ArrayList<Object> list = new21();
                push(goTo(11), list, false);
            }
            break;
            case 22: /* reduce AValorCaractereValor */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list, false);
            }
            break;
            case 23: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new23();
                push(goTo(12), list, false);
            }
            break;
            case 24: /* reduce AFuncoesComando */
            {
                ArrayList<Object> list = new24();
                push(goTo(12), list, false);
            }
            break;
            case 25: /* reduce ASeComando */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce ASeNaoComando */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list, false);
            }
            break;
            case 27: /* reduce ASeEntaoComando */
            {
                ArrayList<Object> list = new27();
                push(goTo(12), list, false);
            }
            break;
            case 28: /* reduce ASeNaoEntaoComando */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list, false);
            }
            break;
            case 29: /* reduce AAvalieComando */
            {
                ArrayList<Object> list = new29();
                push(goTo(12), list, false);
            }
            break;
            case 30: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new30();
                push(goTo(12), list, false);
            }
            break;
            case 31: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new31();
                push(goTo(12), list, false);
            }
            break;
            case 32: /* reduce AParaComando */
            {
                ArrayList<Object> list = new32();
                push(goTo(12), list, false);
            }
            break;
            case 33: /* reduce AParaPassoComando */
            {
                ArrayList<Object> list = new33();
                push(goTo(12), list, false);
            }
            break;
            case 34: /* reduce AAtribuicaoAtribuicoes */
            {
                ArrayList<Object> list = new34();
                push(goTo(13), list, false);
            }
            break;
            case 35: /* reduce ALeiaFuncoes */
            {
                ArrayList<Object> list = new35();
                push(goTo(14), list, false);
            }
            break;
            case 36: /* reduce AEscrevaFuncoes */
            {
                ArrayList<Object> list = new36();
                push(goTo(14), list, false);
            }
            break;
            case 37: /* reduce ASenaoSenaoEstruturas */
            {
                ArrayList<Object> list = new37();
                push(goTo(15), list, false);
            }
            break;
            case 38: /* reduce APassoPassoEstruturas */
            {
                ArrayList<Object> list = new38();
                push(goTo(16), list, false);
            }
            break;
            case 39: /* reduce AAteAteEstrutura */
            {
                ArrayList<Object> list = new39();
                push(goTo(17), list, false);
            }
            break;
            case 40: /* reduce ASeSeEstruturas */
            {
                ArrayList<Object> list = new40();
                push(goTo(18), list, false);
            }
            break;
            case 41: /* reduce ASeNaoSeEstruturasNao */
            {
                ArrayList<Object> list = new41();
                push(goTo(19), list, false);
            }
            break;
            case 42: /* reduce ASeSenaoSeSenaoEstruturas */
            {
                ArrayList<Object> list = new42();
                push(goTo(20), list, false);
            }
            break;
            case 43: /* reduce ASeNaoSenaoSeSenaoEstruturasNao */
            {
                ArrayList<Object> list = new43();
                push(goTo(21), list, false);
            }
            break;
            case 44: /* reduce AAvalieAvalieEstruturas */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list, false);
            }
            break;
            case 45: /* reduce AEnquantoEnquantoEstruturas */
            {
                ArrayList<Object> list = new45();
                push(goTo(23), list, false);
            }
            break;
            case 46: /* reduce ARepitaRepitaEstruturas */
            {
                ArrayList<Object> list = new46();
                push(goTo(24), list, false);
            }
            break;
            case 47: /* reduce AParaParaEstruturas */
            {
                ArrayList<Object> list = new47();
                push(goTo(25), list, false);
            }
            break;
            case 48: /* reduce AParaPassoParaPassoEstruturas */
            {
                ArrayList<Object> list = new48();
                push(goTo(26), list, false);
            }
            break;
            case 49: /* reduce AVezesMultiplicacao */
            {
                ArrayList<Object> list = new49();
                push(goTo(27), list, false);
            }
            break;
            case 50: /* reduce ADivididoMultiplicacao */
            {
                ArrayList<Object> list = new50();
                push(goTo(27), list, false);
            }
            break;
            case 51: /* reduce ARestoMultiplicacao */
            {
                ArrayList<Object> list = new51();
                push(goTo(27), list, false);
            }
            break;
            case 52: /* reduce AMaisSoma */
            {
                ArrayList<Object> list = new52();
                push(goTo(28), list, false);
            }
            break;
            case 53: /* reduce AMenosSoma */
            {
                ArrayList<Object> list = new53();
                push(goTo(28), list, false);
            }
            break;
            case 54: /* reduce AMaiorIgualSinalRelacional */
            {
                ArrayList<Object> list = new54();
                push(goTo(29), list, false);
            }
            break;
            case 55: /* reduce AMenorIgualSinalRelacional */
            {
                ArrayList<Object> list = new55();
                push(goTo(29), list, false);
            }
            break;
            case 56: /* reduce AMaiorSinalRelacional */
            {
                ArrayList<Object> list = new56();
                push(goTo(29), list, false);
            }
            break;
            case 57: /* reduce AMenorSinalRelacional */
            {
                ArrayList<Object> list = new57();
                push(goTo(29), list, false);
            }
            break;
            case 58: /* reduce AIgualdadeSinalIgualgade */
            {
                ArrayList<Object> list = new58();
                push(goTo(30), list, false);
            }
            break;
            case 59: /* reduce ADiferencaSinalIgualgade */
            {
                ArrayList<Object> list = new59();
                push(goTo(30), list, false);
            }
            break;
            case 60: /* reduce AOuSinalLogicoOu */
            {
                ArrayList<Object> list = new60();
                push(goTo(31), list, false);
            }
            break;
            case 61: /* reduce AXorSinalLogicoOu */
            {
                ArrayList<Object> list = new61();
                push(goTo(31), list, false);
            }
            break;
            case 62: /* reduce AESinalLogicoE */
            {
                ArrayList<Object> list = new62();
                push(goTo(32), list, false);
            }
            break;
            case 63: /* reduce ANaoSinalLogicoNao */
            {
                ArrayList<Object> list = new63();
                push(goTo(33), list, false);
            }
            break;
            case 64: /* reduce ASomasExpressao */
            {
                ArrayList<Object> list = new64();
                push(goTo(34), list, false);
            }
            break;
            case 65: /* reduce ATermoExpressao */
            {
                ArrayList<Object> list = new65();
                push(goTo(34), list, false);
            }
            break;
            case 66: /* reduce AMultiplicacoesTermo */
            {
                ArrayList<Object> list = new66();
                push(goTo(35), list, false);
            }
            break;
            case 67: /* reduce AFatorTermo */
            {
                ArrayList<Object> list = new67();
                push(goTo(35), list, false);
            }
            break;
            case 68: /* reduce AParentesesFator */
            {
                ArrayList<Object> list = new68();
                push(goTo(36), list, false);
            }
            break;
            case 69: /* reduce AValorFator */
            {
                ArrayList<Object> list = new69();
                push(goTo(36), list, false);
            }
            break;
            case 70: /* reduce AVarFator */
            {
                ArrayList<Object> list = new70();
                push(goTo(36), list, false);
            }
            break;
            case 71: /* reduce AExpressaoLogicaExpressaoLogica */
            {
                ArrayList<Object> list = new71();
                push(goTo(37), list, false);
            }
            break;
            case 72: /* reduce ATermoLogicoExpressaoLogica */
            {
                ArrayList<Object> list = new72();
                push(goTo(37), list, false);
            }
            break;
            case 73: /* reduce ATermoLogicoTermoLogico */
            {
                ArrayList<Object> list = new73();
                push(goTo(38), list, false);
            }
            break;
            case 74: /* reduce AFatorLogicoTermoLogico */
            {
                ArrayList<Object> list = new74();
                push(goTo(38), list, false);
            }
            break;
            case 75: /* reduce AFatorLogicoFatorLogico */
            {
                ArrayList<Object> list = new75();
                push(goTo(39), list, false);
            }
            break;
            case 76: /* reduce ATermoRelacionalFatorLogico */
            {
                ArrayList<Object> list = new76();
                push(goTo(39), list, false);
            }
            break;
            case 77: /* reduce ATermoRelacionalTermoRelacional */
            {
                ArrayList<Object> list = new77();
                push(goTo(40), list, false);
            }
            break;
            case 78: /* reduce AFatorRelacionalTermoRelacional */
            {
                ArrayList<Object> list = new78();
                push(goTo(40), list, false);
            }
            break;
            case 79: /* reduce AFatorRelacionalFatorRelacional */
            {
                ArrayList<Object> list = new79();
                push(goTo(41), list, false);
            }
            break;
            case 80: /* reduce ATermoAritmeticoFatorRelacional */
            {
                ArrayList<Object> list = new80();
                push(goTo(41), list, false);
            }
            break;
            case 81: /* reduce ATermoAritmeticoTermoAritmetico */
            {
                ArrayList<Object> list = new81();
                push(goTo(42), list, false);
            }
            break;
            case 82: /* reduce AFatorAritmeticoTermoAritmetico */
            {
                ArrayList<Object> list = new82();
                push(goTo(42), list, false);
            }
            break;
            case 83: /* reduce AFatorAritmeticoFatorAritmetico */
            {
                ArrayList<Object> list = new83();
                push(goTo(43), list, false);
            }
            break;
            case 84: /* reduce ATermoAritmeticoFatorAritmetico */
            {
                ArrayList<Object> list = new84();
                push(goTo(43), list, false);
            }
            break;
            case 85: /* reduce AParentesesParenteses */
            {
                ArrayList<Object> list = new85();
                push(goTo(44), list, false);
            }
            break;
            case 86: /* reduce AValorParenteses */
            {
                ArrayList<Object> list = new86();
                push(goTo(44), list, false);
            }
            break;
            case 87: /* reduce AVarParenteses */
            {
                ArrayList<Object> list = new87();
                push(goTo(44), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PInstanciaPrograma pinstanciaprogramaNode2;
        pinstanciaprogramaNode2 = (PInstanciaPrograma)nodeArrayList1.get(0);

        pstartNode1 = new AStartStart(pinstanciaprogramaNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AIdIdentficador */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentficador pidentficadorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidentficadorNode1 = new AIdIdentficador(tidNode2);
        }
	nodeList.add(pidentficadorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AComandoSimplesBlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComando pblococomandoNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pblococomandoNode1 = new AComandoSimplesBlocoComando(pcomandoNode2);
        }
	nodeList.add(pblococomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ABlocoComandosBlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComando pblococomandoNode1;
        {
            // Block
        PBlocoComando pblococomandoNode2;
        PComando pcomandoNode3;
        pblococomandoNode2 = (PBlocoComando)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pblococomandoNode1 = new ABlocoComandosBlocoComando(pblococomandoNode2, pcomandoNode3);
        }
	nodeList.add(pblococomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AExpressaoSimplesBlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressao pblocoexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pblocoexpressaoNode1 = new AExpressaoSimplesBlocoExpressao(pexpressaoNode2);
        }
	nodeList.add(pblocoexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ABlocoEspressoesBlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressao pblocoexpressaoNode1;
        {
            // Block
        PBlocoExpressao pblocoexpressaoNode2;
        TVirgula tvirgulaNode3;
        PExpressao pexpressaoNode4;
        pblocoexpressaoNode2 = (PBlocoExpressao)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);

        pblocoexpressaoNode1 = new ABlocoEspressoesBlocoExpressao(pblocoexpressaoNode2, tvirgulaNode3, pexpressaoNode4);
        }
	nodeList.add(pblocoexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AVariavelSimplesBlocoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoVariavel pblocovariavelNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pblocovariavelNode1 = new AVariavelSimplesBlocoVariavel(pvariavelNode2);
        }
	nodeList.add(pblocovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ABlocoVariaveisBlocoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoVariavel pblocovariavelNode1;
        {
            // Block
        PBlocoVariavel pblocovariavelNode2;
        TVirgula tvirgulaNode3;
        PVariavel pvariavelNode4;
        pblocovariavelNode2 = (PBlocoVariavel)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pvariavelNode4 = (PVariavel)nodeArrayList3.get(0);

        pblocovariavelNode1 = new ABlocoVariaveisBlocoVariavel(pblocovariavelNode2, tvirgulaNode3, pvariavelNode4);
        }
	nodeList.add(pblocovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ACasoSimplesBlocoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoCaso pblococasoNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoispontos tdoispontosNode4;
        PBlocoComando pblococomandoNode5;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoispontos)nodeArrayList3.get(0);
        pblococomandoNode5 = (PBlocoComando)nodeArrayList4.get(0);

        pblococasoNode1 = new ACasoSimplesBlocoCaso(tcasoNode2, pvalorNode3, tdoispontosNode4, pblococomandoNode5);
        }
	nodeList.add(pblococasoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ABlocoCasosBlocoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoCaso pblococasoNode1;
        {
            // Block
        PBlocoCaso pblococasoNode2;
        TCaso tcasoNode3;
        PValor pvalorNode4;
        TDoispontos tdoispontosNode5;
        PBlocoComando pblococomandoNode6;
        pblococasoNode2 = (PBlocoCaso)nodeArrayList1.get(0);
        tcasoNode3 = (TCaso)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoispontos)nodeArrayList4.get(0);
        pblococomandoNode6 = (PBlocoComando)nodeArrayList5.get(0);

        pblococasoNode1 = new ABlocoCasosBlocoCaso(pblococasoNode2, tcasoNode3, pvalorNode4, tdoispontosNode5, pblococomandoNode6);
        }
	nodeList.add(pblococasoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ADeclaracaoSimplesBlocoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoDeclaracao pblocodeclaracaoNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);

        pblocodeclaracaoNode1 = new ADeclaracaoSimplesBlocoDeclaracao(pdeclaracaoNode2);
        }
	nodeList.add(pblocodeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ABlocoDeclaracaoBlocoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoDeclaracao pblocodeclaracaoNode1;
        {
            // Block
        PBlocoDeclaracao pblocodeclaracaoNode2;
        PDeclaracao pdeclaracaoNode3;
        pblocodeclaracaoNode2 = (PBlocoDeclaracao)nodeArrayList1.get(0);
        pdeclaracaoNode3 = (PDeclaracao)nodeArrayList2.get(0);

        pblocodeclaracaoNode1 = new ABlocoDeclaracaoBlocoDeclaracao(pblocodeclaracaoNode2, pdeclaracaoNode3);
        }
	nodeList.add(pblocodeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AProgramaInstanciaPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInstanciaPrograma pinstanciaprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        PIdentficador pidentficadorNode3;
        TInicio tinicioNode4;
        PBlocoDeclaracao pblocodeclaracaoNode5;
        PBlocoComando pblococomandoNode6;
        TFim tfimNode7;
        TPonto tpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        pidentficadorNode3 = (PIdentficador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        pblocodeclaracaoNode5 = (PBlocoDeclaracao)nodeArrayList4.get(0);
        pblococomandoNode6 = (PBlocoComando)nodeArrayList5.get(0);
        tfimNode7 = (TFim)nodeArrayList6.get(0);
        tpontoNode8 = (TPonto)nodeArrayList7.get(0);

        pinstanciaprogramaNode1 = new AProgramaInstanciaPrograma(tprogramaNode2, pidentficadorNode3, tinicioNode4, pblocodeclaracaoNode5, pblococomandoNode6, tfimNode7, tpontoNode8);
        }
	nodeList.add(pinstanciaprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ADeclaracaoVariavelDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PBlocoVariavel pblocovariavelNode4;
        TPontovirgula tpontovirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pblocovariavelNode4 = (PBlocoVariavel)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracaoVariavelDeclaracao(ptipoNode2, tdoispontosNode3, pblocovariavelNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ADeclaracaoConstDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontovirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracaoConstDeclaracao(tconstanteNode2, tidNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(tnrealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNInteiro tninteiroNode2;
        tninteiroNode2 = (TNInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tninteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ACaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNCaractere tncaractereNode2;
        tncaractereNode2 = (TNCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tncaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AVariavelVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        PIdentficador pidentficadorNode2;
        pidentficadorNode2 = (PIdentficador)nodeArrayList1.get(0);

        pvariavelNode1 = new AVariavelVariavel(pidentficadorNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AVariavelVetorVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        PIdentficador pidentficadorNode2;
        TACochete tacocheteNode3;
        TInteiro tinteiroNode4;
        TFCochete tfcocheteNode5;
        pidentficadorNode2 = (PIdentficador)nodeArrayList1.get(0);
        tacocheteNode3 = (TACochete)nodeArrayList2.get(0);
        tinteiroNode4 = (TInteiro)nodeArrayList3.get(0);
        tfcocheteNode5 = (TFCochete)nodeArrayList4.get(0);

        pvariavelNode1 = new AVariavelVetorVariavel(pidentficadorNode2, tacocheteNode3, tinteiroNode4, tfcocheteNode5);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AValorRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pvalorNode1 = new AValorRealValor(trealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AValorInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new AValorInteiroValor(tinteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AValorCaractereValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        pvalorNode1 = new AValorCaractereValor(tcaractereNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAtribuicoes patribuicoesNode2;
        patribuicoesNode2 = (PAtribuicoes)nodeArrayList1.get(0);

        pcomandoNode1 = new AAtribuicaoComando(patribuicoesNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AFuncoesComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PFuncoes pfuncoesNode2;
        pfuncoesNode2 = (PFuncoes)nodeArrayList1.get(0);

        pcomandoNode1 = new AFuncoesComando(pfuncoesNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeEstruturas pseestruturasNode2;
        pseestruturasNode2 = (PSeEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeComando(pseestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ASeNaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeEstruturasNao pseestruturasnaoNode2;
        pseestruturasnaoNode2 = (PSeEstruturasNao)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeNaoComando(pseestruturasnaoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ASeEntaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeSenaoEstruturas psesenaoestruturasNode2;
        psesenaoestruturasNode2 = (PSeSenaoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeEntaoComando(psesenaoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ASeNaoEntaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeSenaoEstruturasNao psesenaoestruturasnaoNode2;
        psesenaoestruturasnaoNode2 = (PSeSenaoEstruturasNao)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeNaoEntaoComando(psesenaoestruturasnaoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAvalieComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAvalieEstruturas pavalieestruturasNode2;
        pavalieestruturasNode2 = (PAvalieEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AAvalieComando(pavalieestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PEnquantoEstruturas penquantoestruturasNode2;
        penquantoestruturasNode2 = (PEnquantoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AEnquantoComando(penquantoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PRepitaEstruturas prepitaestruturasNode2;
        prepitaestruturasNode2 = (PRepitaEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ARepitaComando(prepitaestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaEstruturas pparaestruturasNode2;
        pparaestruturasNode2 = (PParaEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaComando(pparaestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AParaPassoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaPassoEstruturas pparapassoestruturasNode2;
        pparapassoestruturasNode2 = (PParaPassoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaPassoComando(pparapassoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAtribuicaoAtribuicoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtribuicoes patribuicoesNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TRecebe trecebeNode3;
        PExpressao pexpressaoNode4;
        TPontovirgula tpontovirgulaNode5;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        trecebeNode3 = (TRecebe)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        patribuicoesNode1 = new AAtribuicaoAtribuicoes(pvariavelNode2, trecebeNode3, pexpressaoNode4, tpontovirgulaNode5);
        }
	nodeList.add(patribuicoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ALeiaFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFuncoes pfuncoesNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAParenteses taparentesesNode3;
        PBlocoVariavel pblocovariavelNode4;
        TFParenteses tfparentesesNode5;
        TPontovirgula tpontovirgulaNode6;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pblocovariavelNode4 = (PBlocoVariavel)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontovirgula)nodeArrayList5.get(0);

        pfuncoesNode1 = new ALeiaFuncoes(tleiaNode2, taparentesesNode3, pblocovariavelNode4, tfparentesesNode5, tpontovirgulaNode6);
        }
	nodeList.add(pfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AEscrevaFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFuncoes pfuncoesNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAParenteses taparentesesNode3;
        PBlocoExpressao pblocoexpressaoNode4;
        TFParenteses tfparentesesNode5;
        TPontovirgula tpontovirgulaNode6;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pblocoexpressaoNode4 = (PBlocoExpressao)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontovirgula)nodeArrayList5.get(0);

        pfuncoesNode1 = new AEscrevaFuncoes(tescrevaNode2, taparentesesNode3, pblocoexpressaoNode4, tfparentesesNode5, tpontovirgulaNode6);
        }
	nodeList.add(pfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ASenaoSenaoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoEstruturas psenaoestruturasNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PBlocoComando pblococomandoNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pblococomandoNode3 = (PBlocoComando)nodeArrayList2.get(0);

        psenaoestruturasNode1 = new ASenaoSenaoEstruturas(tsenaoNode2, pblococomandoNode3);
        }
	nodeList.add(psenaoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce APassoPassoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPassoEstruturas ppassoestruturasNode1;
        {
            // Block
        TPasso tpassoNode2;
        TInteiro tinteiroNode3;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tinteiroNode3 = (TInteiro)nodeArrayList2.get(0);

        ppassoestruturasNode1 = new APassoPassoEstruturas(tpassoNode2, tinteiroNode3);
        }
	nodeList.add(ppassoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAteAteEstrutura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAteEstrutura pateestruturaNode1;
        {
            // Block
        TAte tateNode2;
        PVariavel pvariavelNode3;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);

        pateestruturaNode1 = new AAteAteEstrutura(tateNode2, pvariavelNode3);
        }
	nodeList.add(pateestruturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ASeSeEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeEstruturas pseestruturasNode1;
        {
            // Block
        TSe tseNode2;
        TAParenteses taparentesesNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFParenteses tfparentesesNode5;
        TEntao tentaoNode6;
        PBlocoComando pblococomandoNode7;
        TFimSe tfimseNode8;
        TPontovirgula tpontovirgulaNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pblococomandoNode7 = (PBlocoComando)nodeArrayList6.get(0);
        tfimseNode8 = (TFimSe)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList8.get(0);

        pseestruturasNode1 = new ASeSeEstruturas(tseNode2, taparentesesNode3, pexpressaologicaNode4, tfparentesesNode5, tentaoNode6, pblococomandoNode7, tfimseNode8, tpontovirgulaNode9);
        }
	nodeList.add(pseestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ASeNaoSeEstruturasNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeEstruturasNao pseestruturasnaoNode1;
        {
            // Block
        TSe tseNode2;
        PSinalLogicoNao psinallogiconaoNode3;
        TAParenteses taparentesesNode4;
        PExpressaoLogica pexpressaologicaNode5;
        TFParenteses tfparentesesNode6;
        TEntao tentaoNode7;
        PBlocoComando pblococomandoNode8;
        TFimSe tfimseNode9;
        TPontovirgula tpontovirgulaNode10;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        psinallogiconaoNode3 = (PSinalLogicoNao)nodeArrayList2.get(0);
        taparentesesNode4 = (TAParenteses)nodeArrayList3.get(0);
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList4.get(0);
        tfparentesesNode6 = (TFParenteses)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        pblococomandoNode8 = (PBlocoComando)nodeArrayList7.get(0);
        tfimseNode9 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontovirgula)nodeArrayList9.get(0);

        pseestruturasnaoNode1 = new ASeNaoSeEstruturasNao(tseNode2, psinallogiconaoNode3, taparentesesNode4, pexpressaologicaNode5, tfparentesesNode6, tentaoNode7, pblococomandoNode8, tfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pseestruturasnaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASeSenaoSeSenaoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSenaoEstruturas psesenaoestruturasNode1;
        {
            // Block
        TSe tseNode2;
        TAParenteses taparentesesNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFParenteses tfparentesesNode5;
        TEntao tentaoNode6;
        PBlocoComando pblococomandoNode7;
        PSenaoEstruturas psenaoestruturasNode8;
        TFimSe tfimseNode9;
        TPontovirgula tpontovirgulaNode10;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pblococomandoNode7 = (PBlocoComando)nodeArrayList6.get(0);
        psenaoestruturasNode8 = (PSenaoEstruturas)nodeArrayList7.get(0);
        tfimseNode9 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontovirgula)nodeArrayList9.get(0);

        psesenaoestruturasNode1 = new ASeSenaoSeSenaoEstruturas(tseNode2, taparentesesNode3, pexpressaologicaNode4, tfparentesesNode5, tentaoNode6, pblococomandoNode7, psenaoestruturasNode8, tfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(psesenaoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ASeNaoSenaoSeSenaoEstruturasNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSenaoEstruturasNao psesenaoestruturasnaoNode1;
        {
            // Block
        TSe tseNode2;
        PSinalLogicoNao psinallogiconaoNode3;
        TAParenteses taparentesesNode4;
        PExpressaoLogica pexpressaologicaNode5;
        TFParenteses tfparentesesNode6;
        TEntao tentaoNode7;
        PBlocoComando pblococomandoNode8;
        PSenaoEstruturas psenaoestruturasNode9;
        TFimSe tfimseNode10;
        TPontovirgula tpontovirgulaNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        psinallogiconaoNode3 = (PSinalLogicoNao)nodeArrayList2.get(0);
        taparentesesNode4 = (TAParenteses)nodeArrayList3.get(0);
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList4.get(0);
        tfparentesesNode6 = (TFParenteses)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        pblococomandoNode8 = (PBlocoComando)nodeArrayList7.get(0);
        psenaoestruturasNode9 = (PSenaoEstruturas)nodeArrayList8.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList9.get(0);
        tpontovirgulaNode11 = (TPontovirgula)nodeArrayList10.get(0);

        psesenaoestruturasnaoNode1 = new ASeNaoSenaoSeSenaoEstruturasNao(tseNode2, psinallogiconaoNode3, taparentesesNode4, pexpressaologicaNode5, tfparentesesNode6, tentaoNode7, pblococomandoNode8, psenaoestruturasNode9, tfimseNode10, tpontovirgulaNode11);
        }
	nodeList.add(psesenaoestruturasnaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AAvalieAvalieEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieEstruturas pavalieestruturasNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAParenteses taparentesesNode3;
        PExpressao pexpressaoNode4;
        TFParenteses tfparentesesNode5;
        PBlocoCaso pblococasoNode6;
        PSenaoEstruturas psenaoestruturasNode7;
        TFimAvalie tfimavalieNode8;
        TPontovirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pexpressaoNode4 = (PExpressao)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        pblococasoNode6 = (PBlocoCaso)nodeArrayList5.get(0);
        psenaoestruturasNode7 = (PSenaoEstruturas)nodeArrayList6.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList8.get(0);

        pavalieestruturasNode1 = new AAvalieAvalieEstruturas(tavalieNode2, taparentesesNode3, pexpressaoNode4, tfparentesesNode5, pblococasoNode6, psenaoestruturasNode7, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pavalieestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AEnquantoEnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAParenteses taparentesesNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFParenteses tfparentesesNode5;
        TFaca tfacaNode6;
        PBlocoComando pblococomandoNode7;
        TFimEnquanto tfimenquantoNode8;
        TPontovirgula tpontovirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        taparentesesNode3 = (TAParenteses)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfparentesesNode5 = (TFParenteses)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pblococomandoNode7 = (PBlocoComando)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontovirgula)nodeArrayList8.get(0);

        penquantoestruturasNode1 = new AEnquantoEnquantoEstruturas(tenquantoNode2, taparentesesNode3, pexpressaologicaNode4, tfparentesesNode5, tfacaNode6, pblococomandoNode7, tfimenquantoNode8, tpontovirgulaNode9);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ARepitaRepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        TRepita trepitaNode2;
        PBlocoComando pblococomandoNode3;
        TAte tateNode4;
        TAParenteses taparentesesNode5;
        PExpressaoLogica pexpressaologicaNode6;
        TFParenteses tfparentesesNode7;
        TPontovirgula tpontovirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pblococomandoNode3 = (PBlocoComando)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        taparentesesNode5 = (TAParenteses)nodeArrayList4.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList5.get(0);
        tfparentesesNode7 = (TFParenteses)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontovirgula)nodeArrayList7.get(0);

        prepitaestruturasNode1 = new ARepitaRepitaEstruturas(trepitaNode2, pblococomandoNode3, tateNode4, taparentesesNode5, pexpressaologicaNode6, tfparentesesNode7, tpontovirgulaNode8);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AParaParaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaEstruturas pparaestruturasNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        TInteiro tinteiroNode5;
        PAteEstrutura pateestruturaNode6;
        TFaca tfacaNode7;
        PBlocoComando pblococomandoNode8;
        TFimPara tfimparaNode9;
        TPontovirgula tpontovirgulaNode10;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tinteiroNode5 = (TInteiro)nodeArrayList4.get(0);
        pateestruturaNode6 = (PAteEstrutura)nodeArrayList5.get(0);
        tfacaNode7 = (TFaca)nodeArrayList6.get(0);
        pblococomandoNode8 = (PBlocoComando)nodeArrayList7.get(0);
        tfimparaNode9 = (TFimPara)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontovirgula)nodeArrayList9.get(0);

        pparaestruturasNode1 = new AParaParaEstruturas(tparaNode2, pvariavelNode3, tdeNode4, tinteiroNode5, pateestruturaNode6, tfacaNode7, pblococomandoNode8, tfimparaNode9, tpontovirgulaNode10);
        }
	nodeList.add(pparaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AParaPassoParaPassoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaPassoEstruturas pparapassoestruturasNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        TInteiro tinteiroNode5;
        PAteEstrutura pateestruturaNode6;
        PPassoEstruturas ppassoestruturasNode7;
        TFaca tfacaNode8;
        PBlocoComando pblococomandoNode9;
        TFimPara tfimparaNode10;
        TPontovirgula tpontovirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tinteiroNode5 = (TInteiro)nodeArrayList4.get(0);
        pateestruturaNode6 = (PAteEstrutura)nodeArrayList5.get(0);
        ppassoestruturasNode7 = (PPassoEstruturas)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pblococomandoNode9 = (PBlocoComando)nodeArrayList8.get(0);
        tfimparaNode10 = (TFimPara)nodeArrayList9.get(0);
        tpontovirgulaNode11 = (TPontovirgula)nodeArrayList10.get(0);

        pparapassoestruturasNode1 = new AParaPassoParaPassoEstruturas(tparaNode2, pvariavelNode3, tdeNode4, tinteiroNode5, pateestruturaNode6, ppassoestruturasNode7, tfacaNode8, pblococomandoNode9, tfimparaNode10, tpontovirgulaNode11);
        }
	nodeList.add(pparapassoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AVezesMultiplicacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultiplicacao pmultiplicacaoNode1;
        {
            // Block
        TVezes tvezesNode2;
        tvezesNode2 = (TVezes)nodeArrayList1.get(0);

        pmultiplicacaoNode1 = new AVezesMultiplicacao(tvezesNode2);
        }
	nodeList.add(pmultiplicacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ADivididoMultiplicacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultiplicacao pmultiplicacaoNode1;
        {
            // Block
        TDividido tdivididoNode2;
        tdivididoNode2 = (TDividido)nodeArrayList1.get(0);

        pmultiplicacaoNode1 = new ADivididoMultiplicacao(tdivididoNode2);
        }
	nodeList.add(pmultiplicacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ARestoMultiplicacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultiplicacao pmultiplicacaoNode1;
        {
            // Block
        TResto trestoNode2;
        trestoNode2 = (TResto)nodeArrayList1.get(0);

        pmultiplicacaoNode1 = new ARestoMultiplicacao(trestoNode2);
        }
	nodeList.add(pmultiplicacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AMaisSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMais tmaisNode2;
        tmaisNode2 = (TMais)nodeArrayList1.get(0);

        psomaNode1 = new AMaisSoma(tmaisNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMenosSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMenos tmenosNode2;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);

        psomaNode1 = new AMenosSoma(tmenosNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AMaiorIgualSinalRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalRelacional psinalrelacionalNode1;
        {
            // Block
        TMaiorigual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorigual)nodeArrayList1.get(0);

        psinalrelacionalNode1 = new AMaiorIgualSinalRelacional(tmaiorigualNode2);
        }
	nodeList.add(psinalrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AMenorIgualSinalRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalRelacional psinalrelacionalNode1;
        {
            // Block
        TMenorigual tmenorigualNode2;
        tmenorigualNode2 = (TMenorigual)nodeArrayList1.get(0);

        psinalrelacionalNode1 = new AMenorIgualSinalRelacional(tmenorigualNode2);
        }
	nodeList.add(psinalrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AMaiorSinalRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalRelacional psinalrelacionalNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        psinalrelacionalNode1 = new AMaiorSinalRelacional(tmaiorNode2);
        }
	nodeList.add(psinalrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AMenorSinalRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalRelacional psinalrelacionalNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        psinalrelacionalNode1 = new AMenorSinalRelacional(tmenorNode2);
        }
	nodeList.add(psinalrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AIgualdadeSinalIgualgade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalIgualgade psinaligualgadeNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        psinaligualgadeNode1 = new AIgualdadeSinalIgualgade(tigualNode2);
        }
	nodeList.add(psinaligualgadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ADiferencaSinalIgualgade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalIgualgade psinaligualgadeNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        psinaligualgadeNode1 = new ADiferencaSinalIgualgade(tdiferenteNode2);
        }
	nodeList.add(psinaligualgadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AOuSinalLogicoOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalLogicoOu psinallogicoouNode1;
        {
            // Block
        TOu touNode2;
        touNode2 = (TOu)nodeArrayList1.get(0);

        psinallogicoouNode1 = new AOuSinalLogicoOu(touNode2);
        }
	nodeList.add(psinallogicoouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AXorSinalLogicoOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalLogicoOu psinallogicoouNode1;
        {
            // Block
        TXor txorNode2;
        txorNode2 = (TXor)nodeArrayList1.get(0);

        psinallogicoouNode1 = new AXorSinalLogicoOu(txorNode2);
        }
	nodeList.add(psinallogicoouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AESinalLogicoE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalLogicoE psinallogicoeNode1;
        {
            // Block
        TE teNode2;
        teNode2 = (TE)nodeArrayList1.get(0);

        psinallogicoeNode1 = new AESinalLogicoE(teNode2);
        }
	nodeList.add(psinallogicoeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ANaoSinalLogicoNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSinalLogicoNao psinallogiconaoNode1;
        {
            // Block
        TNao tnaoNode2;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);

        psinallogiconaoNode1 = new ANaoSinalLogicoNao(tnaoNode2);
        }
	nodeList.add(psinallogiconaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ASomasExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PSoma psomaNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        psomaNode3 = (PSoma)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new ASomasExpressao(pexpressaoNode2, psomaNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATermoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaoNode1 = new ATermoExpressao(ptermoNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AMultiplicacoesTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PMultiplicacao pmultiplicacaoNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pmultiplicacaoNode3 = (PMultiplicacao)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiplicacoesTermo(ptermoNode2, pmultiplicacaoNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AParentesesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAParenteses taparentesesNode2;
        PExpressao pexpressaoNode3;
        TFParenteses tfparentesesNode4;
        taparentesesNode2 = (TAParenteses)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tfparentesesNode4 = (TFParenteses)nodeArrayList3.get(0);

        pfatorNode1 = new AParentesesFator(taparentesesNode2, pexpressaoNode3, tfparentesesNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AValorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AVarFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pfatorNode1 = new AVarFator(pvariavelNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AExpressaoLogicaExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PSinalLogicoNao psinallogiconaoNode2;
        PTermoLogico ptermologicoNode3;
        psinallogiconaoNode2 = (PSinalLogicoNao)nodeArrayList1.get(0);
        ptermologicoNode3 = (PTermoLogico)nodeArrayList2.get(0);

        pexpressaologicaNode1 = new AExpressaoLogicaExpressaoLogica(psinallogiconaoNode2, ptermologicoNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATermoLogicoExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new ATermoLogicoExpressaoLogica(ptermologicoNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATermoLogicoTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        PSinalLogicoE psinallogicoeNode3;
        PFatorLogico pfatorlogicoNode4;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);
        psinallogicoeNode3 = (PSinalLogicoE)nodeArrayList2.get(0);
        pfatorlogicoNode4 = (PFatorLogico)nodeArrayList3.get(0);

        ptermologicoNode1 = new ATermoLogicoTermoLogico(ptermologicoNode2, psinallogicoeNode3, pfatorlogicoNode4);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AFatorLogicoTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PFatorLogico pfatorlogicoNode2;
        pfatorlogicoNode2 = (PFatorLogico)nodeArrayList1.get(0);

        ptermologicoNode1 = new AFatorLogicoTermoLogico(pfatorlogicoNode2);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AFatorLogicoFatorLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorLogico pfatorlogicoNode1;
        {
            // Block
        PFatorLogico pfatorlogicoNode2;
        PSinalLogicoOu psinallogicoouNode3;
        PTermoRelacional ptermorelacionalNode4;
        pfatorlogicoNode2 = (PFatorLogico)nodeArrayList1.get(0);
        psinallogicoouNode3 = (PSinalLogicoOu)nodeArrayList2.get(0);
        ptermorelacionalNode4 = (PTermoRelacional)nodeArrayList3.get(0);

        pfatorlogicoNode1 = new AFatorLogicoFatorLogico(pfatorlogicoNode2, psinallogicoouNode3, ptermorelacionalNode4);
        }
	nodeList.add(pfatorlogicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ATermoRelacionalFatorLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorLogico pfatorlogicoNode1;
        {
            // Block
        PTermoRelacional ptermorelacionalNode2;
        ptermorelacionalNode2 = (PTermoRelacional)nodeArrayList1.get(0);

        pfatorlogicoNode1 = new ATermoRelacionalFatorLogico(ptermorelacionalNode2);
        }
	nodeList.add(pfatorlogicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ATermoRelacionalTermoRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoRelacional ptermorelacionalNode1;
        {
            // Block
        PTermoRelacional ptermorelacionalNode2;
        PSinalIgualgade psinaligualgadeNode3;
        PFatorRelacional pfatorrelacionalNode4;
        ptermorelacionalNode2 = (PTermoRelacional)nodeArrayList1.get(0);
        psinaligualgadeNode3 = (PSinalIgualgade)nodeArrayList2.get(0);
        pfatorrelacionalNode4 = (PFatorRelacional)nodeArrayList3.get(0);

        ptermorelacionalNode1 = new ATermoRelacionalTermoRelacional(ptermorelacionalNode2, psinaligualgadeNode3, pfatorrelacionalNode4);
        }
	nodeList.add(ptermorelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AFatorRelacionalTermoRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoRelacional ptermorelacionalNode1;
        {
            // Block
        PFatorRelacional pfatorrelacionalNode2;
        pfatorrelacionalNode2 = (PFatorRelacional)nodeArrayList1.get(0);

        ptermorelacionalNode1 = new AFatorRelacionalTermoRelacional(pfatorrelacionalNode2);
        }
	nodeList.add(ptermorelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AFatorRelacionalFatorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRelacional pfatorrelacionalNode1;
        {
            // Block
        PFatorRelacional pfatorrelacionalNode2;
        PSinalRelacional psinalrelacionalNode3;
        PTermoAritmetico ptermoaritmeticoNode4;
        pfatorrelacionalNode2 = (PFatorRelacional)nodeArrayList1.get(0);
        psinalrelacionalNode3 = (PSinalRelacional)nodeArrayList2.get(0);
        ptermoaritmeticoNode4 = (PTermoAritmetico)nodeArrayList3.get(0);

        pfatorrelacionalNode1 = new AFatorRelacionalFatorRelacional(pfatorrelacionalNode2, psinalrelacionalNode3, ptermoaritmeticoNode4);
        }
	nodeList.add(pfatorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ATermoAritmeticoFatorRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRelacional pfatorrelacionalNode1;
        {
            // Block
        PTermoAritmetico ptermoaritmeticoNode2;
        ptermoaritmeticoNode2 = (PTermoAritmetico)nodeArrayList1.get(0);

        pfatorrelacionalNode1 = new ATermoAritmeticoFatorRelacional(ptermoaritmeticoNode2);
        }
	nodeList.add(pfatorrelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ATermoAritmeticoTermoAritmetico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoAritmetico ptermoaritmeticoNode1;
        {
            // Block
        PTermoAritmetico ptermoaritmeticoNode2;
        PSoma psomaNode3;
        PFatorAritmetico pfatoraritmeticoNode4;
        ptermoaritmeticoNode2 = (PTermoAritmetico)nodeArrayList1.get(0);
        psomaNode3 = (PSoma)nodeArrayList2.get(0);
        pfatoraritmeticoNode4 = (PFatorAritmetico)nodeArrayList3.get(0);

        ptermoaritmeticoNode1 = new ATermoAritmeticoTermoAritmetico(ptermoaritmeticoNode2, psomaNode3, pfatoraritmeticoNode4);
        }
	nodeList.add(ptermoaritmeticoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AFatorAritmeticoTermoAritmetico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoAritmetico ptermoaritmeticoNode1;
        {
            // Block
        PFatorAritmetico pfatoraritmeticoNode2;
        pfatoraritmeticoNode2 = (PFatorAritmetico)nodeArrayList1.get(0);

        ptermoaritmeticoNode1 = new AFatorAritmeticoTermoAritmetico(pfatoraritmeticoNode2);
        }
	nodeList.add(ptermoaritmeticoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AFatorAritmeticoFatorAritmetico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorAritmetico pfatoraritmeticoNode1;
        {
            // Block
        PFatorAritmetico pfatoraritmeticoNode2;
        PMultiplicacao pmultiplicacaoNode3;
        PParenteses pparentesesNode4;
        pfatoraritmeticoNode2 = (PFatorAritmetico)nodeArrayList1.get(0);
        pmultiplicacaoNode3 = (PMultiplicacao)nodeArrayList2.get(0);
        pparentesesNode4 = (PParenteses)nodeArrayList3.get(0);

        pfatoraritmeticoNode1 = new AFatorAritmeticoFatorAritmetico(pfatoraritmeticoNode2, pmultiplicacaoNode3, pparentesesNode4);
        }
	nodeList.add(pfatoraritmeticoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ATermoAritmeticoFatorAritmetico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorAritmetico pfatoraritmeticoNode1;
        {
            // Block
        PParenteses pparentesesNode2;
        pparentesesNode2 = (PParenteses)nodeArrayList1.get(0);

        pfatoraritmeticoNode1 = new ATermoAritmeticoFatorAritmetico(pparentesesNode2);
        }
	nodeList.add(pfatoraritmeticoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AParentesesParenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParenteses pparentesesNode1;
        {
            // Block
        TAParenteses taparentesesNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TFParenteses tfparentesesNode4;
        taparentesesNode2 = (TAParenteses)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tfparentesesNode4 = (TFParenteses)nodeArrayList3.get(0);

        pparentesesNode1 = new AParentesesParenteses(taparentesesNode2, pexpressaologicaNode3, tfparentesesNode4);
        }
	nodeList.add(pparentesesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AValorParenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParenteses pparentesesNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pparentesesNode1 = new AValorParenteses(pvalorNode2);
        }
	nodeList.add(pparentesesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AVarParenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParenteses pparentesesNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pparentesesNode1 = new AVarParenteses(pvariavelNode2);
        }
	nodeList.add(pparentesesNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {30, SHIFT, 1}, },
			{{-1, ERROR, 1}, {59, SHIFT, 4}, },
			{{-1, ERROR, 2}, {60, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 5}, {31, SHIFT, 6}, },
			{{-1, ERROR, 6}, {28, SHIFT, 7}, {56, SHIFT, 8}, {57, SHIFT, 9}, {58, SHIFT, 10}, },
			{{-1, ERROR, 7}, {59, SHIFT, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 11}, {28, SHIFT, 7}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {56, SHIFT, 8}, {57, SHIFT, 9}, {58, SHIFT, 10}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 13}, {6, SHIFT, 38}, },
			{{-1, ERROR, 14}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, },
			{{-1, ERROR, 15}, {9, SHIFT, 43}, },
			{{-1, ERROR, 16}, {9, SHIFT, 44}, },
			{{-1, ERROR, 17}, {9, SHIFT, 45}, {21, SHIFT, 46}, },
			{{-1, ERROR, 18}, {9, SHIFT, 48}, },
			{{-1, ERROR, 19}, {9, SHIFT, 49}, },
			{{-1, ERROR, 20}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 18}, {7, SHIFT, 52}, },
			{{-1, ERROR, 23}, {32, SHIFT, 53}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 25}, {2, SHIFT, 55}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 38}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 42}, {3, SHIFT, 58}, },
			{{-1, ERROR, 43}, {59, SHIFT, 4}, },
			{{-1, ERROR, 44}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 45}, {9, SHIFT, 67}, {21, SHIFT, 46}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 47}, {9, SHIFT, 79}, },
			{{-1, ERROR, 48}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 49}, {9, SHIFT, 67}, {21, SHIFT, 46}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 50}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {48, SHIFT, 82}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 51}, {50, SHIFT, 83}, },
			{{-1, ERROR, 52}, {53, SHIFT, 84}, },
			{{-1, ERROR, 53}, {5, SHIFT, 85}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 55}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 56}, {3, SHIFT, 87}, {4, SHIFT, 88}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 59}, {4, SHIFT, 88}, {10, SHIFT, 89}, },
			{{-1, ERROR, 60}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 61}, {4, SHIFT, 91}, {10, SHIFT, 92}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 4}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 65}, {15, SHIFT, 96}, {16, SHIFT, 97}, {17, SHIFT, 98}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 67}, {9, SHIFT, 67}, {21, SHIFT, 46}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 70}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 71}, {10, SHIFT, 102}, },
			{{-1, REDUCE, 72}, {18, SHIFT, 103}, },
			{{-1, REDUCE, 74}, {19, SHIFT, 105}, {20, SHIFT, 106}, },
			{{-1, REDUCE, 76}, {22, SHIFT, 108}, {23, SHIFT, 109}, },
			{{-1, REDUCE, 78}, {24, SHIFT, 111}, {25, SHIFT, 112}, {26, SHIFT, 113}, {27, SHIFT, 114}, },
			{{-1, REDUCE, 80}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 82}, {15, SHIFT, 96}, {16, SHIFT, 97}, {17, SHIFT, 98}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 79}, {9, SHIFT, 67}, {21, SHIFT, 46}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 80}, {10, SHIFT, 119}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, ERROR, 81}, {10, SHIFT, 120}, },
			{{-1, ERROR, 82}, {9, SHIFT, 121}, },
			{{-1, ERROR, 83}, {53, SHIFT, 122}, },
			{{-1, ERROR, 84}, {8, SHIFT, 123}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 86}, {3, SHIFT, 124}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 88}, {59, SHIFT, 4}, },
			{{-1, ERROR, 89}, {3, SHIFT, 126}, },
			{{-1, ERROR, 90}, {10, SHIFT, 127}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, ERROR, 91}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 92}, {3, SHIFT, 129}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 95}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 99}, {9, SHIFT, 60}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 100}, {10, SHIFT, 132}, },
			{{-1, REDUCE, 71}, {18, SHIFT, 103}, },
			{{-1, ERROR, 102}, {38, SHIFT, 133}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 104}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 107}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 110}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 115}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 116}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 117}, {9, SHIFT, 67}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 118}, {10, SHIFT, 140}, },
			{{-1, ERROR, 119}, {42, SHIFT, 141}, },
			{{-1, ERROR, 120}, {45, SHIFT, 143}, },
			{{-1, ERROR, 121}, {9, SHIFT, 67}, {21, SHIFT, 46}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 4}, },
			{{-1, ERROR, 122}, {48, SHIFT, 145}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 5}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 64}, {15, SHIFT, 96}, {16, SHIFT, 97}, {17, SHIFT, 98}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 133}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 73}, {19, SHIFT, 105}, {20, SHIFT, 106}, },
			{{-1, REDUCE, 75}, {22, SHIFT, 108}, {23, SHIFT, 109}, },
			{{-1, REDUCE, 77}, {24, SHIFT, 111}, {25, SHIFT, 112}, {26, SHIFT, 113}, {27, SHIFT, 114}, },
			{{-1, REDUCE, 79}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 81}, {15, SHIFT, 96}, {16, SHIFT, 97}, {17, SHIFT, 98}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 140}, {38, SHIFT, 148}, },
			{{-1, ERROR, 141}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, },
			{{-1, ERROR, 142}, {39, SHIFT, 150}, {42, SHIFT, 151}, },
			{{-1, ERROR, 143}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 144}, {10, SHIFT, 154}, },
			{{-1, ERROR, 145}, {59, SHIFT, 4}, },
			{{-1, ERROR, 146}, {45, SHIFT, 156}, {51, SHIFT, 157}, },
			{{-1, ERROR, 147}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {39, SHIFT, 150}, {40, SHIFT, 159}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 148}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 149}, {6, SHIFT, 162}, },
			{{-1, ERROR, 150}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 151}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, },
			{{-1, ERROR, 152}, {43, SHIFT, 165}, },
			{{-1, ERROR, 153}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 166}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 154}, {3, SHIFT, 167}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 156}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 157}, {53, SHIFT, 169}, },
			{{-1, ERROR, 158}, {45, SHIFT, 170}, },
			{{-1, ERROR, 159}, {3, SHIFT, 171}, },
			{{-1, ERROR, 160}, {40, SHIFT, 172}, },
			{{-1, ERROR, 161}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {39, SHIFT, 150}, {40, SHIFT, 173}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 162}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 37}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 164}, {6, SHIFT, 176}, },
			{{-1, ERROR, 165}, {3, SHIFT, 177}, },
			{{-1, ERROR, 166}, {3, SHIFT, 178}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 168}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {52, SHIFT, 179}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 170}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 172}, {3, SHIFT, 181}, },
			{{-1, ERROR, 173}, {3, SHIFT, 182}, },
			{{-1, ERROR, 174}, {40, SHIFT, 183}, },
			{{-1, REDUCE, 8}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, ERROR, 176}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 179}, {3, SHIFT, 185}, },
			{{-1, ERROR, 180}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {52, SHIFT, 186}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 183}, {3, SHIFT, 187}, },
			{{-1, REDUCE, 9}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 4}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 186}, {3, SHIFT, 188}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 48}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 22}, {1, 5}, },
			{{-1, 23}, {20, 50}, {133, 147}, {143, 153}, {148, 161}, {150, 163}, {156, 168}, {162, 175}, {170, 180}, {176, 184}, },
			{{-1, 61}, },
			{{-1, 56}, {43, 59}, },
			{{-1, 142}, },
			{{-1, 11}, },
			{{-1, 3}, },
			{{-1, 12}, {11, 24}, },
			{{-1, 13}, },
			{{-1, 25}, {21, 51}, {38, 57}, {43, 57}, {44, 62}, {45, 68}, {48, 62}, {49, 68}, {55, 62}, {60, 62}, {67, 68}, {70, 68}, {79, 68}, {88, 125}, {91, 62}, {95, 62}, {99, 62}, {104, 68}, {107, 68}, {110, 68}, {115, 68}, {116, 68}, {117, 68}, {121, 68}, {145, 155}, },
			{{-1, 69}, {14, 42}, {44, 63}, {48, 63}, {55, 63}, {60, 63}, {91, 63}, {95, 63}, {99, 63}, {141, 149}, {151, 164}, },
			{{-1, 26}, {23, 54}, {50, 54}, {147, 54}, {153, 54}, {161, 54}, {163, 54}, {168, 54}, {175, 54}, {180, 54}, {184, 54}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 152}, {147, 160}, {161, 174}, },
			{{-1, 158}, },
			{{-1, 146}, },
			{{-1, 29}, },
			{{-1, 30}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 33}, },
			{{-1, 34}, },
			{{-1, 35}, },
			{{-1, 36}, },
			{{-1, 37}, },
			{{-1, 99}, {77, 117}, {138, 117}, },
			{{-1, 95}, {76, 116}, {137, 116}, },
			{{-1, 115}, },
			{{-1, 110}, },
			{{-1, 107}, },
			{{-1, 104}, },
			{{-1, 70}, {17, 47}, },
			{{-1, 64}, {48, 80}, {55, 86}, {60, 90}, {91, 128}, },
			{{-1, 65}, {95, 130}, },
			{{-1, 66}, {99, 131}, },
			{{-1, 71}, {49, 81}, {67, 100}, {79, 118}, {121, 144}, },
			{{-1, 72}, {70, 101}, },
			{{-1, 73}, {104, 134}, },
			{{-1, 74}, {107, 135}, },
			{{-1, 75}, {110, 136}, },
			{{-1, 76}, {115, 137}, },
			{{-1, 77}, {116, 138}, },
			{{-1, 78}, {117, 139}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: '<-', ';', ',', '[', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<', 'inicio', 'faca', 'de', 'passo'",
			"expecting: 'inicio'",
			"expecting: 'const', 'real', 'inteiro', 'caractere'",
			"expecting: ':'",
			"expecting: 'const', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'real', 'inteiro', 'caractere', id",
			"expecting: inteiro, caractere, real",
			"expecting: '('",
			"expecting: '(', 'nao'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: '<-', ';', ',', '[', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<', 'faca', 'de', 'passo'",
			"expecting: 'fim', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: '<-'",
			"expecting: 'fim', 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'caso', 'fim avalie', 'enquanto', 'fim enquanto', 'repita', 'ate', 'para', 'fim para', id",
			"expecting: ';', ',', ':', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ';'",
			"expecting: '(', inteiro, caractere, real, id",
			"expecting: '(', 'nao', inteiro, caractere, real, id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', id",
			"expecting: 'de'",
			"expecting: inteiro",
			"expecting: '.'",
			"expecting: ';', ','",
			"expecting: ';', ',', ')'",
			"expecting: ',', ')'",
			"expecting: ';', ',', ')', '-', '+', '*', '/', 'resto'",
			"expecting: ',', ')', '-', '+'",
			"expecting: ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ')'",
			"expecting: ')', 'e'",
			"expecting: ')', 'e', 'ou', 'xor'",
			"expecting: ')', 'e', 'ou', 'xor', '=', '<>'",
			"expecting: ')', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ')', '-', '+', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ')', '-', '+'",
			"expecting: ']'",
			"expecting: ';', '-', '+'",
			"expecting: 'entao'",
			"expecting: 'caso'",
			"expecting: 'faca'",
			"expecting: 'ate'",
			"expecting: '<-', ';', ',', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<', 'faca', 'de', 'passo'",
			"expecting: 'senao', 'caso'",
			"expecting: 'faca', 'passo'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'fim avalie'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', id",
			"expecting: 'fim se'",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'caso', 'enquanto', 'repita', 'para', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 5, 1, 6, 6, 6, 7, 7, 6, 8, 9, 9, 10, 9, 9, 11, 1, 12, 13, 7, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 1, 16, 16, 16, 17, 1, 18, 19, 18, 9, 18, 19, 20, 21, 22, 23, 15, 18, 24, 25, 7, 26, 18, 26, 27, 27, 28, 27, 27, 19, 29, 29, 18, 30, 31, 32, 33, 34, 35, 29, 29, 19, 36, 30, 9, 22, 37, 2, 38, 7, 1, 17, 36, 18, 17, 18, 18, 18, 18, 18, 18, 18, 30, 31, 39, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 30, 40, 41, 19, 42, 43, 15, 25, 15, 27, 28, 15, 27, 27, 29, 11, 32, 33, 34, 35, 29, 29, 39, 8, 44, 11, 30, 1, 45, 46, 11, 6, 11, 8, 47, 48, 17, 45, 11, 22, 41, 17, 49, 46, 11, 50, 6, 17, 17, 15, 51, 41, 11, 15, 17, 17, 49, 52, 11, 15, 15, 17, 51, 15, 15, 17, 52, 15, 17, 15, 15, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
