/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.parser;

import expression.lexer.*;
import expression.node.*;
import expression.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AComandoSimplesBlocoComando */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list);
            }
            break;
            case 2: /* reduce ABlocoComandosBlocoComando */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AExpressaoLogica$Ou1BlocoExpressao */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list);
            }
            break;
            case 4: /* reduce AExpressaoLogica$Xor1BlocoExpressao */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AExpressaoLogica$TermoLogico$E11BlocoExpressao */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AExpressaoLogica$TermoLogico$Relacional$Igual111BlocoExpressao */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce AExpressaoLogica$TermoLogico$Relacional$Diferente111BlocoExpressao */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list);
            }
            break;
            case 8: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Maiorigual1111BlocoExpressao */
            {
                ArrayList<Object> list = new8();
                push(goTo(2), list);
            }
            break;
            case 9: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Menorigual1111BlocoExpressao */
            {
                ArrayList<Object> list = new9();
                push(goTo(2), list);
            }
            break;
            case 10: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Maior1111BlocoExpressao */
            {
                ArrayList<Object> list = new10();
                push(goTo(2), list);
            }
            break;
            case 11: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Menor1111BlocoExpressao */
            {
                ArrayList<Object> list = new11();
                push(goTo(2), list);
            }
            break;
            case 12: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111BlocoExpressao */
            {
                ArrayList<Object> list = new12();
                push(goTo(2), list);
            }
            break;
            case 13: /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Negacao1111BlocoExpressao */
            {
                ArrayList<Object> list = new13();
                push(goTo(2), list);
            }
            break;
            case 14: /* reduce ABlocoEspressao$Ou1BlocoExpressao */
            {
                ArrayList<Object> list = new14();
                push(goTo(2), list);
            }
            break;
            case 15: /* reduce ABlocoEspressao$Xor1BlocoExpressao */
            {
                ArrayList<Object> list = new15();
                push(goTo(2), list);
            }
            break;
            case 16: /* reduce ABlocoEspressao$TermoLogico$E11BlocoExpressao */
            {
                ArrayList<Object> list = new16();
                push(goTo(2), list);
            }
            break;
            case 17: /* reduce ABlocoEspressao$TermoLogico$Relacional$Igual111BlocoExpressao */
            {
                ArrayList<Object> list = new17();
                push(goTo(2), list);
            }
            break;
            case 18: /* reduce ABlocoEspressao$TermoLogico$Relacional$Diferente111BlocoExpressao */
            {
                ArrayList<Object> list = new18();
                push(goTo(2), list);
            }
            break;
            case 19: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Maiorigual1111BlocoExpressao */
            {
                ArrayList<Object> list = new19();
                push(goTo(2), list);
            }
            break;
            case 20: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Menorigual1111BlocoExpressao */
            {
                ArrayList<Object> list = new20();
                push(goTo(2), list);
            }
            break;
            case 21: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Maior1111BlocoExpressao */
            {
                ArrayList<Object> list = new21();
                push(goTo(2), list);
            }
            break;
            case 22: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Menor1111BlocoExpressao */
            {
                ArrayList<Object> list = new22();
                push(goTo(2), list);
            }
            break;
            case 23: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111BlocoExpressao */
            {
                ArrayList<Object> list = new23();
                push(goTo(2), list);
            }
            break;
            case 24: /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Negacao1111BlocoExpressao */
            {
                ArrayList<Object> list = new24();
                push(goTo(2), list);
            }
            break;
            case 25: /* reduce AVariavelSimplesBlocoVariavel */
            {
                ArrayList<Object> list = new25();
                push(goTo(3), list);
            }
            break;
            case 26: /* reduce ABlocoVariaveisBlocoVariavel */
            {
                ArrayList<Object> list = new26();
                push(goTo(3), list);
            }
            break;
            case 27: /* reduce ACasoSimplesBlocoCaso */
            {
                ArrayList<Object> list = new27();
                push(goTo(4), list);
            }
            break;
            case 28: /* reduce ABlocoCasoBlocoCaso */
            {
                ArrayList<Object> list = new28();
                push(goTo(4), list);
            }
            break;
            case 29: /* reduce ACasoStant */
            {
                ArrayList<Object> list = new29();
                push(goTo(5), list);
            }
            break;
            case 30: /* reduce ADeclaracaoSimplesBlocoDeclaracao */
            {
                ArrayList<Object> list = new30();
                push(goTo(6), list);
            }
            break;
            case 31: /* reduce ABlocoDeclaracaoBlocoDeclaracao */
            {
                ArrayList<Object> list = new31();
                push(goTo(6), list);
            }
            break;
            case 32: /* reduce AVariavelDeclaracao */
            {
                ArrayList<Object> list = new32();
                push(goTo(7), list);
            }
            break;
            case 33: /* reduce AConstanteDeclaracao */
            {
                ArrayList<Object> list = new33();
                push(goTo(7), list);
            }
            break;
            case 34: /* reduce ABlocoPrograma */
            {
                ArrayList<Object> list = new34();
                push(goTo(8), list);
            }
            break;
            case 35: /* reduce AInstanciaPrograma */
            {
                ArrayList<Object> list = new35();
                push(goTo(9), list);
            }
            break;
            case 36: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new36();
                push(goTo(10), list);
            }
            break;
            case 37: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new37();
                push(goTo(10), list);
            }
            break;
            case 38: /* reduce ACaractereTipo */
            {
                ArrayList<Object> list = new38();
                push(goTo(10), list);
            }
            break;
            case 39: /* reduce AVariavelVariavel */
            {
                ArrayList<Object> list = new39();
                push(goTo(11), list);
            }
            break;
            case 40: /* reduce AVetorVariavel */
            {
                ArrayList<Object> list = new40();
                push(goTo(11), list);
            }
            break;
            case 41: /* reduce AValorRealValor */
            {
                ArrayList<Object> list = new41();
                push(goTo(12), list);
            }
            break;
            case 42: /* reduce AValorInteiroValor */
            {
                ArrayList<Object> list = new42();
                push(goTo(12), list);
            }
            break;
            case 43: /* reduce AValorCaractereValor */
            {
                ArrayList<Object> list = new43();
                push(goTo(12), list);
            }
            break;
            case 44: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new44();
                push(goTo(13), list);
            }
            break;
            case 45: /* reduce AFuncaoComando */
            {
                ArrayList<Object> list = new45();
                push(goTo(13), list);
            }
            break;
            case 46: /* reduce ASeComando */
            {
                ArrayList<Object> list = new46();
                push(goTo(13), list);
            }
            break;
            case 47: /* reduce ASeSenaoComando */
            {
                ArrayList<Object> list = new47();
                push(goTo(13), list);
            }
            break;
            case 48: /* reduce AAvalieComando */
            {
                ArrayList<Object> list = new48();
                push(goTo(13), list);
            }
            break;
            case 49: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new49();
                push(goTo(13), list);
            }
            break;
            case 50: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new50();
                push(goTo(13), list);
            }
            break;
            case 51: /* reduce AParaComando */
            {
                ArrayList<Object> list = new51();
                push(goTo(13), list);
            }
            break;
            case 52: /* reduce AParaPassoComando */
            {
                ArrayList<Object> list = new52();
                push(goTo(13), list);
            }
            break;
            case 53: /* reduce AAtribuicoes */
            {
                ArrayList<Object> list = new53();
                push(goTo(14), list);
            }
            break;
            case 54: /* reduce ALeiaFuncoes */
            {
                ArrayList<Object> list = new54();
                push(goTo(15), list);
            }
            break;
            case 55: /* reduce AEscrevaFuncoes */
            {
                ArrayList<Object> list = new55();
                push(goTo(15), list);
            }
            break;
            case 56: /* reduce AInteiroIntOuVar */
            {
                ArrayList<Object> list = new56();
                push(goTo(16), list);
            }
            break;
            case 57: /* reduce AVarIntOuVar */
            {
                ArrayList<Object> list = new57();
                push(goTo(16), list);
            }
            break;
            case 58: /* reduce APassoPassoEstruturas */
            {
                ArrayList<Object> list = new58();
                push(goTo(17), list);
            }
            break;
            case 59: /* reduce AAteAteEstrutura */
            {
                ArrayList<Object> list = new59();
                push(goTo(18), list);
            }
            break;
            case 60: /* reduce AOu1SeStant */
            {
                ArrayList<Object> list = new60();
                push(goTo(19), list);
            }
            break;
            case 61: /* reduce AXor1SeStant */
            {
                ArrayList<Object> list = new61();
                push(goTo(19), list);
            }
            break;
            case 62: /* reduce ATermoLogico$E11SeStant */
            {
                ArrayList<Object> list = new62();
                push(goTo(19), list);
            }
            break;
            case 63: /* reduce ATermoLogico$Relacional$Igual111SeStant */
            {
                ArrayList<Object> list = new63();
                push(goTo(19), list);
            }
            break;
            case 64: /* reduce ATermoLogico$Relacional$Diferente111SeStant */
            {
                ArrayList<Object> list = new64();
                push(goTo(19), list);
            }
            break;
            case 65: /* reduce ATermoLogico$Relacional$TermoRelac$Maiorigual1111SeStant */
            {
                ArrayList<Object> list = new65();
                push(goTo(19), list);
            }
            break;
            case 66: /* reduce ATermoLogico$Relacional$TermoRelac$Menorigual1111SeStant */
            {
                ArrayList<Object> list = new66();
                push(goTo(19), list);
            }
            break;
            case 67: /* reduce ATermoLogico$Relacional$TermoRelac$Maior1111SeStant */
            {
                ArrayList<Object> list = new67();
                push(goTo(19), list);
            }
            break;
            case 68: /* reduce ATermoLogico$Relacional$TermoRelac$Menor1111SeStant */
            {
                ArrayList<Object> list = new68();
                push(goTo(19), list);
            }
            break;
            case 69: /* reduce ATermoLogico$Relacional$TermoRelac$ExpressaoAritm1111SeStant */
            {
                ArrayList<Object> list = new69();
                push(goTo(19), list);
            }
            break;
            case 70: /* reduce ATermoLogico$Relacional$TermoRelac$Negacao1111SeStant */
            {
                ArrayList<Object> list = new70();
                push(goTo(19), list);
            }
            break;
            case 71: /* reduce ASenaoEstruturas */
            {
                ArrayList<Object> list = new71();
                push(goTo(20), list);
            }
            break;
            case 72: /* reduce ASeSeEstruturas */
            {
                ArrayList<Object> list = new72();
                push(goTo(21), list);
            }
            break;
            case 73: /* reduce ASeSenaoSeSenaoEstruturas */
            {
                ArrayList<Object> list = new73();
                push(goTo(22), list);
            }
            break;
            case 74: /* reduce AAvalieAvalieEstruturas */
            {
                ArrayList<Object> list = new74();
                push(goTo(23), list);
            }
            break;
            case 75: /* reduce AEnquanto$Ou1EnquantoEstruturas */
            {
                ArrayList<Object> list = new75();
                push(goTo(24), list);
            }
            break;
            case 76: /* reduce AEnquanto$Xor1EnquantoEstruturas */
            {
                ArrayList<Object> list = new76();
                push(goTo(24), list);
            }
            break;
            case 77: /* reduce AEnquanto$TermoLogico$E11EnquantoEstruturas */
            {
                ArrayList<Object> list = new77();
                push(goTo(24), list);
            }
            break;
            case 78: /* reduce AEnquanto$TermoLogico$Relacional$Igual111EnquantoEstruturas */
            {
                ArrayList<Object> list = new78();
                push(goTo(24), list);
            }
            break;
            case 79: /* reduce AEnquanto$TermoLogico$Relacional$Diferente111EnquantoEstruturas */
            {
                ArrayList<Object> list = new79();
                push(goTo(24), list);
            }
            break;
            case 80: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Maiorigual1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new80();
                push(goTo(24), list);
            }
            break;
            case 81: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Menorigual1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new81();
                push(goTo(24), list);
            }
            break;
            case 82: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Maior1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new82();
                push(goTo(24), list);
            }
            break;
            case 83: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Menor1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new83();
                push(goTo(24), list);
            }
            break;
            case 84: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new84();
                push(goTo(24), list);
            }
            break;
            case 85: /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Negacao1111EnquantoEstruturas */
            {
                ArrayList<Object> list = new85();
                push(goTo(24), list);
            }
            break;
            case 86: /* reduce ARepita$Ou1RepitaEstruturas */
            {
                ArrayList<Object> list = new86();
                push(goTo(25), list);
            }
            break;
            case 87: /* reduce ARepita$Xor1RepitaEstruturas */
            {
                ArrayList<Object> list = new87();
                push(goTo(25), list);
            }
            break;
            case 88: /* reduce ARepita$TermoLogico$E11RepitaEstruturas */
            {
                ArrayList<Object> list = new88();
                push(goTo(25), list);
            }
            break;
            case 89: /* reduce ARepita$TermoLogico$Relacional$Igual111RepitaEstruturas */
            {
                ArrayList<Object> list = new89();
                push(goTo(25), list);
            }
            break;
            case 90: /* reduce ARepita$TermoLogico$Relacional$Diferente111RepitaEstruturas */
            {
                ArrayList<Object> list = new90();
                push(goTo(25), list);
            }
            break;
            case 91: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Maiorigual1111RepitaEstruturas */
            {
                ArrayList<Object> list = new91();
                push(goTo(25), list);
            }
            break;
            case 92: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Menorigual1111RepitaEstruturas */
            {
                ArrayList<Object> list = new92();
                push(goTo(25), list);
            }
            break;
            case 93: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Maior1111RepitaEstruturas */
            {
                ArrayList<Object> list = new93();
                push(goTo(25), list);
            }
            break;
            case 94: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Menor1111RepitaEstruturas */
            {
                ArrayList<Object> list = new94();
                push(goTo(25), list);
            }
            break;
            case 95: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111RepitaEstruturas */
            {
                ArrayList<Object> list = new95();
                push(goTo(25), list);
            }
            break;
            case 96: /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Negacao1111RepitaEstruturas */
            {
                ArrayList<Object> list = new96();
                push(goTo(25), list);
            }
            break;
            case 97: /* reduce AParaParaEstruturas */
            {
                ArrayList<Object> list = new97();
                push(goTo(26), list);
            }
            break;
            case 98: /* reduce AParaPassoParaPassoEstruturas */
            {
                ArrayList<Object> list = new98();
                push(goTo(27), list);
            }
            break;
            case 99: /* reduce AMaisExpressao */
            {
                ArrayList<Object> list = new99();
                push(goTo(28), list);
            }
            break;
            case 100: /* reduce AMenosExpressao */
            {
                ArrayList<Object> list = new100();
                push(goTo(28), list);
            }
            break;
            case 101: /* reduce AFatorExpressao */
            {
                ArrayList<Object> list = new101();
                push(goTo(28), list);
            }
            break;
            case 102: /* reduce AVezesFator */
            {
                ArrayList<Object> list = new102();
                push(goTo(29), list);
            }
            break;
            case 103: /* reduce ADivididoFator */
            {
                ArrayList<Object> list = new103();
                push(goTo(29), list);
            }
            break;
            case 104: /* reduce ARestoFator */
            {
                ArrayList<Object> list = new104();
                push(goTo(29), list);
            }
            break;
            case 105: /* reduce ATermoFator */
            {
                ArrayList<Object> list = new105();
                push(goTo(29), list);
            }
            break;
            case 106: /* reduce AExpressaoTermo */
            {
                ArrayList<Object> list = new106();
                push(goTo(30), list);
            }
            break;
            case 107: /* reduce AValorTermo */
            {
                ArrayList<Object> list = new107();
                push(goTo(30), list);
            }
            break;
            case 108: /* reduce AVariavelTermo */
            {
                ArrayList<Object> list = new108();
                push(goTo(30), list);
            }
            break;
            case 109: /* reduce AMenosExpressaoTermo */
            {
                ArrayList<Object> list = new109();
                push(goTo(30), list);
            }
            break;
            case 110: /* reduce AMaisExpressaoAritm */
            {
                ArrayList<Object> list = new110();
                push(goTo(31), list);
            }
            break;
            case 111: /* reduce AMenosExpressaoAritm */
            {
                ArrayList<Object> list = new111();
                push(goTo(31), list);
            }
            break;
            case 112: /* reduce AFatorExpressaoAritm */
            {
                ArrayList<Object> list = new112();
                push(goTo(31), list);
            }
            break;
            case 113: /* reduce AVezesFatorAritm */
            {
                ArrayList<Object> list = new113();
                push(goTo(32), list);
            }
            break;
            case 114: /* reduce ADivididoFatorAritm */
            {
                ArrayList<Object> list = new114();
                push(goTo(32), list);
            }
            break;
            case 115: /* reduce ARestoFatorAritm */
            {
                ArrayList<Object> list = new115();
                push(goTo(32), list);
            }
            break;
            case 116: /* reduce ATermoFatorAritm */
            {
                ArrayList<Object> list = new116();
                push(goTo(32), list);
            }
            break;
            case 117: /* reduce AExpressaoTermoAritm */
            {
                ArrayList<Object> list = new117();
                push(goTo(33), list);
            }
            break;
            case 118: /* reduce AValorTermoAritm */
            {
                ArrayList<Object> list = new118();
                push(goTo(33), list);
            }
            break;
            case 119: /* reduce AVariavelTermoAritm */
            {
                ArrayList<Object> list = new119();
                push(goTo(33), list);
            }
            break;
            case 120: /* reduce ANaoNegacao */
            {
                ArrayList<Object> list = new120();
                push(goTo(34), list);
            }
            break;
            case 121: /* reduce AParenteses$Ou1Parenteses */
            {
                ArrayList<Object> list = new121();
                push(goTo(35), list);
            }
            break;
            case 122: /* reduce AParenteses$Xor1Parenteses */
            {
                ArrayList<Object> list = new122();
                push(goTo(35), list);
            }
            break;
            case 123: /* reduce AParenteses$TermoLogico$E11Parenteses */
            {
                ArrayList<Object> list = new123();
                push(goTo(35), list);
            }
            break;
            case 124: /* reduce AParenteses$TermoLogico$Relacional$Igual111Parenteses */
            {
                ArrayList<Object> list = new124();
                push(goTo(35), list);
            }
            break;
            case 125: /* reduce AParenteses$TermoLogico$Relacional$Diferente111Parenteses */
            {
                ArrayList<Object> list = new125();
                push(goTo(35), list);
            }
            break;
            case 126: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Maiorigual1111Parenteses */
            {
                ArrayList<Object> list = new126();
                push(goTo(35), list);
            }
            break;
            case 127: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Menorigual1111Parenteses */
            {
                ArrayList<Object> list = new127();
                push(goTo(35), list);
            }
            break;
            case 128: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Maior1111Parenteses */
            {
                ArrayList<Object> list = new128();
                push(goTo(35), list);
            }
            break;
            case 129: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Menor1111Parenteses */
            {
                ArrayList<Object> list = new129();
                push(goTo(35), list);
            }
            break;
            case 130: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111Parenteses */
            {
                ArrayList<Object> list = new130();
                push(goTo(35), list);
            }
            break;
            case 131: /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Negacao1111Parenteses */
            {
                ArrayList<Object> list = new131();
                push(goTo(35), list);
            }
            break;
            case 132: /* reduce AValorParenteses */
            {
                ArrayList<Object> list = new132();
                push(goTo(35), list);
            }
            break;
            case 133: /* reduce AVariavelParenteses */
            {
                ArrayList<Object> list = new133();
                push(goTo(35), list);
            }
            break;
            case 134: /* reduce AParentesesParenteses2 */
            {
                ArrayList<Object> list = new134();
                push(goTo(36), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PInstanciaPrograma pinstanciaprogramaNode2;
        pinstanciaprogramaNode2 = (PInstanciaPrograma)nodeArrayList1.get(0);

        pstartNode1 = new AStart(pinstanciaprogramaNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AComandoSimplesBlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ABlocoComandosBlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AExpressaoLogica$Ou1BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AOuExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AExpressaoLogica$Xor1BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AXorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AExpressaoLogica$TermoLogico$E11BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AEExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AExpressaoLogica$TermoLogico$Relacional$Igual111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AIgualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AExpressaoLogica$TermoLogico$Relacional$Diferente111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new ADiferenteExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Maiorigual1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMaiorigualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Menorigual1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMenorigualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Maior1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMaiorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Menor1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMenorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	if(pexpressaologicaNode1 != null)
	{
	  listNode4.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList1.get(0);
	if(pexpressaologicaNode1 != null)
	{
	  listNode2.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AExpressaoLogica$TermoLogico$Relacional$TermoRelac$Negacao1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList1.get(0);
	if(pexpressaologicaNode1 != null)
	{
	  listNode2.add(pexpressaologicaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ABlocoEspressao$Ou1BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AOuExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ABlocoEspressao$Xor1BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AXorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ABlocoEspressao$TermoLogico$E11BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AEExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ABlocoEspressao$TermoLogico$Relacional$Igual111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AIgualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ABlocoEspressao$TermoLogico$Relacional$Diferente111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new ADiferenteExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Maiorigual1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Menorigual1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Maior1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Menor1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
	if(listNode1 != null)
	{
	  listNode5.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode5.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode3.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce ABlocoEspressao$TermoLogico$Relacional$TermoRelac$Negacao1111BlocoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpressaologicaNode2 != null)
	{
	  listNode3.add(pexpressaologicaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AVariavelSimplesBlocoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVariavel pvariavelNode1;
        pvariavelNode1 = (PVariavel)nodeArrayList1.get(0);
	if(pvariavelNode1 != null)
	{
	  listNode2.add(pvariavelNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ABlocoVariaveisBlocoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVariavel pvariavelNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvariavelNode2 = (PVariavel)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvariavelNode2 != null)
	{
	  listNode3.add(pvariavelNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ACasoSimplesBlocoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCase pcaseNode1;
        pcaseNode1 = (PCase)nodeArrayList1.get(0);
	if(pcaseNode1 != null)
	{
	  listNode2.add(pcaseNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ABlocoCasoBlocoCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCase pcaseNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcaseNode2 = (PCase)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcaseNode2 != null)
	{
	  listNode3.add(pcaseNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ACasoStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCase pcaseNode1;
        {
            // Block
        PValor pvalorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pvalorNode2 = (PValor)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pcaseNode1 = new ACase(pvalorNode2, listNode4);
        }
	nodeList.add(pcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ADeclaracaoSimplesBlocoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracao pdeclaracaoNode1;
        pdeclaracaoNode1 = (PDeclaracao)nodeArrayList1.get(0);
	if(pdeclaracaoNode1 != null)
	{
	  listNode2.add(pdeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ABlocoDeclaracaoBlocoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracao pdeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracaoNode2 != null)
	{
	  listNode3.add(pdeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AVariavelDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pdeclaracaoNode1 = new AVariavelDeclaracao(ptipoNode2, listNode4);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AConstanteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TId tidNode2;
        PValor pvalorNode3;
        tidNode2 = (TId)nodeArrayList2.get(0);
        pvalorNode3 = (PValor)nodeArrayList3.get(0);

        pdeclaracaoNode1 = new AConstanteDeclaracao(tidNode2, pvalorNode3);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ABlocoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoPrograma pblocoprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pblocoprogramaNode1 = new ABlocoPrograma(listNode3, listNode5);
        }
	nodeList.add(pblocoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AInstanciaPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInstanciaPrograma pinstanciaprogramaNode1;
        {
            // Block
        TId tidNode2;
        PBlocoPrograma pblocoprogramaNode3;
        tidNode2 = (TId)nodeArrayList2.get(0);
        pblocoprogramaNode3 = (PBlocoPrograma)nodeArrayList4.get(0);

        pinstanciaprogramaNode1 = new AInstanciaPrograma(tidNode2, pblocoprogramaNode3);
        }
	nodeList.add(pinstanciaprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(tnrealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNInteiro tninteiroNode2;
        tninteiroNode2 = (TNInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tninteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ACaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNCaractere tncaractereNode2;
        tncaractereNode2 = (TNCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tncaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AVariavelVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvariavelNode1 = new AVariavelVariavel(tidNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AVetorVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TId tidNode2;
        TInteiro tinteiroNode3;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tinteiroNode3 = (TInteiro)nodeArrayList3.get(0);

        pvariavelNode1 = new AVetorVariavel(tidNode2, tinteiroNode3);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AValorRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pvalorNode1 = new AValorRealValor(trealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AValorInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new AValorInteiroValor(tinteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AValorCaractereValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        pvalorNode1 = new AValorCaractereValor(tcaractereNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAtribuicoes patribuicoesNode2;
        patribuicoesNode2 = (PAtribuicoes)nodeArrayList1.get(0);

        pcomandoNode1 = new AAtribuicaoComando(patribuicoesNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AFuncaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PFuncoes pfuncoesNode2;
        pfuncoesNode2 = (PFuncoes)nodeArrayList1.get(0);

        pcomandoNode1 = new AFuncaoComando(pfuncoesNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeEstruturas pseestruturasNode2;
        pseestruturasNode2 = (PSeEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeComando(pseestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ASeSenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeSenaoEstruturas psesenaoestruturasNode2;
        psesenaoestruturasNode2 = (PSeSenaoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeSenaoComando(psesenaoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAvalieComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAvalieEstruturas pavalieestruturasNode2;
        pavalieestruturasNode2 = (PAvalieEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AAvalieComando(pavalieestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PEnquantoEstruturas penquantoestruturasNode2;
        penquantoestruturasNode2 = (PEnquantoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AEnquantoComando(penquantoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PRepitaEstruturas prepitaestruturasNode2;
        prepitaestruturasNode2 = (PRepitaEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new ARepitaComando(prepitaestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaEstruturas pparaestruturasNode2;
        pparaestruturasNode2 = (PParaEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaComando(pparaestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AParaPassoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaPassoEstruturas pparapassoestruturasNode2;
        pparapassoestruturasNode2 = (PParaPassoEstruturas)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaPassoComando(pparapassoestruturasNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AAtribuicoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtribuicoes patribuicoesNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        PExpressao pexpressaoNode3;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        patribuicoesNode1 = new AAtribuicoes(pvariavelNode2, pexpressaoNode3);
        }
	nodeList.add(patribuicoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ALeiaFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFuncoes pfuncoesNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfuncoesNode1 = new ALeiaFuncoes(listNode3);
        }
	nodeList.add(pfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AEscrevaFuncoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFuncoes pfuncoesNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfuncoesNode1 = new AEscrevaFuncoes(listNode3);
        }
	nodeList.add(pfuncoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AInteiroIntOuVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AVarIntOuVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce APassoPassoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AAteAteEstrutura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AOu1SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AOuExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AXor1SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AXorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ATermoLogico$E11SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AEExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATermoLogico$Relacional$Igual111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AIgualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ATermoLogico$Relacional$Diferente111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new ADiferenteExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATermoLogico$Relacional$TermoRelac$Maiorigual1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ATermoLogico$Relacional$TermoRelac$Menorigual1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ATermoLogico$Relacional$TermoRelac$Maior1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ATermoLogico$Relacional$TermoRelac$Menor1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ATermoLogico$Relacional$TermoRelac$ExpressaoAritm1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ATermoLogico$Relacional$TermoRelac$Negacao1111SeStant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeStant psestantNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        psestantNode1 = new ASeStant(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(psestantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ASenaoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoEstruturas psenaoestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psenaoestruturasNode1 = new ASenaoEstruturas(listNode3);
        }
	nodeList.add(psenaoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ASeSeEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeEstruturas pseestruturasNode1;
        {
            // Block
        PSeStant psestantNode2;
        psestantNode2 = (PSeStant)nodeArrayList1.get(0);

        pseestruturasNode1 = new ASeEstruturas(psestantNode2);
        }
	nodeList.add(pseestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ASeSenaoSeSenaoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSenaoEstruturas psesenaoestruturasNode1;
        {
            // Block
        PSeStant psestantNode2;
        PSenaoEstruturas psenaoestruturasNode3;
        psestantNode2 = (PSeStant)nodeArrayList1.get(0);
        psenaoestruturasNode3 = (PSenaoEstruturas)nodeArrayList2.get(0);

        psesenaoestruturasNode1 = new ASeSenaoEstruturas(psestantNode2, psenaoestruturasNode3);
        }
	nodeList.add(psesenaoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AAvalieAvalieEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieEstruturas pavalieestruturasNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        pexpressaoNode2 = (PExpressao)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList5.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pavalieestruturasNode1 = new AAvalieEstruturas(pexpressaoNode2, listNode4, listNode6);
        }
	nodeList.add(pavalieestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AEnquanto$Ou1EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AOuExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AEnquanto$Xor1EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AXorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AEnquanto$TermoLogico$E11EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AEExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AEnquanto$TermoLogico$Relacional$Igual111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AIgualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AEnquanto$TermoLogico$Relacional$Diferente111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new ADiferenteExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Maiorigual1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Menorigual1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorigualExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Maior1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMaiorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Menor1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        PExpressaoLogica pexpressaologicaNode3;
        PExpressaoLogica pexpressaologicaNode4;
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        pexpressaologicaNode2 = new AMenorExpressaoLogica(pexpressaologicaNode3, pexpressaologicaNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList8.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode6);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AEnquanto$TermoLogico$Relacional$TermoRelac$Negacao1111EnquantoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEstruturas penquantoestruturasNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        penquantoestruturasNode1 = new AEnquantoEstruturas(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(penquantoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ARepita$Ou1RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AOuExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ARepita$Xor1RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AXorExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ARepita$TermoLogico$E11RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AEExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ARepita$TermoLogico$Relacional$Igual111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AIgualExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ARepita$TermoLogico$Relacional$Diferente111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new ADiferenteExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Maiorigual1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AMaiorigualExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Menorigual1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AMenorigualExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Maior1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AMaiorExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Menor1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        PExpressaoLogica pexpressaologicaNode5;
        PExpressaoLogica pexpressaologicaNode6;
        pexpressaologicaNode5 = (PExpressaoLogica)nodeArrayList5.get(0);
        pexpressaologicaNode6 = (PExpressaoLogica)nodeArrayList7.get(0);

        pexpressaologicaNode4 = new AMenorExpressaoLogica(pexpressaologicaNode5, pexpressaologicaNode6);
        }

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ARepita$TermoLogico$Relacional$TermoRelac$Negacao1111RepitaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEstruturas prepitaestruturasNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        prepitaestruturasNode1 = new ARepitaEstruturas(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepitaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AParaParaEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaEstruturas pparaestruturasNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pvariavelNode2 = (PVariavel)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList7.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparaestruturasNode1 = new AParaEstruturas(pvariavelNode2, listNode4);
        }
	nodeList.add(pparaestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce AParaPassoParaPassoEstruturas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaPassoEstruturas pparapassoestruturasNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pvariavelNode2 = (PVariavel)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList8.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparapassoestruturasNode1 = new AParaPassoEstruturas(pvariavelNode2, listNode4);
        }
	nodeList.add(pparapassoestruturasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AMaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PExpressao pexpressaoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMaisExpressao(pexpressaoNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce AMenosExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PExpressao pexpressaoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMenosExpressao(pexpressaoNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AFatorExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        pexpressaoNode1 = (PExpressao)nodeArrayList1.get(0);
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce AVezesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PExpressao pexpressaoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pexpressaoNode1 = new AVezesExpressao(pexpressaoNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce ADivididoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PExpressao pexpressaoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pexpressaoNode1 = new ADivididoExpressao(pexpressaoNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce ARestoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PExpressao pexpressaoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pexpressaoNode1 = new ADivididoExpressao(pexpressaoNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce ATermoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        pexpressaoNode1 = (PExpressao)nodeArrayList1.get(0);
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce AExpressaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        pexpressaoNode1 = (PExpressao)nodeArrayList2.get(0);
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce AValorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pexpressaoNode1 = new AValorExpressao(pvalorNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AVariavelTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pexpressaoNode1 = new AVariavelExpressao(pvariavelNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce AMenosExpressaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        TMenos tmenosNode2;
        PExpressao pexpressaoNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);

        pexpressaoNode1 = new AMenosExpressaoExpressao(tmenosNode2, pexpressaoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce AMaisExpressaoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMaisExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce AMenosExpressaoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMenosExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce AFatorExpressaoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList1.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce AVezesFatorAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AVezesExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce ADivididoFatorAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new ADivididoExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce ARestoFatorAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new ADivididoExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce ATermoFatorAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList1.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce AExpressaoTermoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList2.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce AValorTermoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AValorExpressaoLogica(pvalorNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce AVariavelTermoAritm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AVariavelExpressaoLogica(pvariavelNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce ANaoNegacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);

        pexpressaologicaNode1 = new ANaoExpressaoLogica(pexpressaologicaNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce AParenteses$Ou1Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AOuExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce AParenteses$Xor1Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AXorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce AParenteses$TermoLogico$E11Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AEExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce AParenteses$TermoLogico$Relacional$Igual111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AIgualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce AParenteses$TermoLogico$Relacional$Diferente111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new ADiferenteExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Maiorigual1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AMaiorigualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new127() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Menorigual1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AMenorigualExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new128() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Maior1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AMaiorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new129() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Menor1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        PExpressaoLogica pexpressaologicaNode3;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList2.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList4.get(0);

        pexpressaologicaNode1 = new AMenorExpressaoLogica(pexpressaologicaNode2, pexpressaologicaNode3);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new130() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$ExpressaoAritm1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList2.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new131() /* reduce AParenteses$TermoLogico$Relacional$TermoRelac$Negacao1111Parenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList2.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new132() /* reduce AValorParenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AValorExpressaoLogica(pvalorNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new133() /* reduce AVariavelParenteses */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AVariavelExpressaoLogica(pvariavelNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new134() /* reduce AParentesesParenteses2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        pexpressaologicaNode1 = (PExpressaoLogica)nodeArrayList1.get(0);
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {30, SHIFT, 1}, },
			{{-1, ERROR, 1}, {59, SHIFT, 4}, },
			{{-1, ERROR, 2}, {60, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 4}, {31, SHIFT, 5}, },
			{{-1, ERROR, 5}, {28, SHIFT, 6}, {56, SHIFT, 7}, {57, SHIFT, 8}, {58, SHIFT, 9}, },
			{{-1, ERROR, 6}, {59, SHIFT, 14}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 10}, {28, SHIFT, 6}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {56, SHIFT, 7}, {57, SHIFT, 8}, {58, SHIFT, 9}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 12}, {32, SHIFT, 37}, },
			{{-1, ERROR, 13}, {6, SHIFT, 38}, },
			{{-1, ERROR, 14}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, },
			{{-1, ERROR, 15}, {9, SHIFT, 43}, },
			{{-1, ERROR, 16}, {9, SHIFT, 44}, },
			{{-1, ERROR, 17}, {9, SHIFT, 45}, },
			{{-1, ERROR, 18}, {9, SHIFT, 46}, },
			{{-1, ERROR, 19}, {9, SHIFT, 47}, },
			{{-1, ERROR, 20}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 39}, {7, SHIFT, 50}, },
			{{-1, REDUCE, 34}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 25}, {2, SHIFT, 52}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 29}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 38}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 42}, {3, SHIFT, 58}, },
			{{-1, ERROR, 43}, {59, SHIFT, 22}, },
			{{-1, ERROR, 44}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 45}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 46}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 47}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 48}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {48, SHIFT, 83}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 49}, {50, SHIFT, 84}, },
			{{-1, ERROR, 50}, {53, SHIFT, 85}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 52}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 53}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 54}, {3, SHIFT, 88}, },
			{{-1, ERROR, 55}, {40, SHIFT, 89}, },
			{{-1, ERROR, 56}, {3, SHIFT, 90}, {4, SHIFT, 91}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 59}, {4, SHIFT, 91}, {10, SHIFT, 92}, },
			{{-1, ERROR, 60}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 61}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 62}, {4, SHIFT, 100}, {10, SHIFT, 101}, },
			{{-1, REDUCE, 133}, {4, REDUCE, 119}, {10, REDUCE, 119}, {13, REDUCE, 119}, {14, REDUCE, 119}, {15, REDUCE, 119}, {16, REDUCE, 119}, {17, REDUCE, 119}, },
			{{-1, REDUCE, 132}, {4, REDUCE, 118}, {10, REDUCE, 118}, {13, REDUCE, 118}, {14, REDUCE, 118}, {15, REDUCE, 118}, {16, REDUCE, 118}, {17, REDUCE, 118}, },
			{{-1, REDUCE, 12}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, REDUCE, 112}, {15, SHIFT, 104}, {16, SHIFT, 105}, {17, SHIFT, 106}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 69}, {18, SHIFT, 107}, {19, SHIFT, 108}, {20, SHIFT, 109}, {22, SHIFT, 110}, {23, SHIFT, 111}, {24, SHIFT, 112}, {25, SHIFT, 113}, {26, SHIFT, 114}, {27, SHIFT, 115}, },
			{{-1, ERROR, 70}, {10, SHIFT, 116}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, ERROR, 71}, {10, SHIFT, 117}, },
			{{-1, ERROR, 72}, {18, SHIFT, 118}, {19, SHIFT, 119}, {20, SHIFT, 120}, {22, SHIFT, 121}, {23, SHIFT, 122}, {24, SHIFT, 123}, {25, SHIFT, 124}, {26, SHIFT, 125}, {27, SHIFT, 126}, },
			{{-1, ERROR, 73}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 74}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 77}, {10, SHIFT, 129}, {13, SHIFT, 130}, {14, SHIFT, 131}, },
			{{-1, REDUCE, 101}, {15, SHIFT, 132}, {16, SHIFT, 133}, {17, SHIFT, 134}, },
			{{-1, REDUCE, 105}, },
			{{-1, ERROR, 80}, {10, SHIFT, 135}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, ERROR, 81}, {10, SHIFT, 136}, },
			{{-1, ERROR, 82}, {18, SHIFT, 137}, {19, SHIFT, 138}, {20, SHIFT, 139}, {22, SHIFT, 140}, {23, SHIFT, 141}, {24, SHIFT, 142}, {25, SHIFT, 143}, {26, SHIFT, 144}, {27, SHIFT, 145}, },
			{{-1, ERROR, 83}, {9, SHIFT, 146}, },
			{{-1, ERROR, 84}, {53, SHIFT, 147}, {59, SHIFT, 22}, },
			{{-1, ERROR, 85}, {8, SHIFT, 150}, },
			{{-1, ERROR, 86}, {3, SHIFT, 151}, {13, SHIFT, 130}, {14, SHIFT, 131}, },
			{{-1, REDUCE, 71}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 89}, {3, SHIFT, 152}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 91}, {59, SHIFT, 22}, },
			{{-1, ERROR, 92}, {3, SHIFT, 154}, },
			{{-1, ERROR, 93}, {10, SHIFT, 155}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, ERROR, 94}, {10, SHIFT, 156}, },
			{{-1, ERROR, 95}, {18, SHIFT, 157}, {19, SHIFT, 158}, {20, SHIFT, 159}, {22, SHIFT, 160}, {23, SHIFT, 161}, {24, SHIFT, 162}, {25, SHIFT, 163}, {26, SHIFT, 164}, {27, SHIFT, 165}, },
			{{-1, ERROR, 96}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 133}, },
			{{-1, REDUCE, 132}, },
			{{-1, REDUCE, 120}, },
			{{-1, ERROR, 100}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 101}, {3, SHIFT, 170}, },
			{{-1, ERROR, 102}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 103}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 104}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 105}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 106}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 107}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 108}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 109}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 110}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 111}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 112}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 113}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 114}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 115}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 116}, {38, SHIFT, 189}, },
			{{-1, ERROR, 117}, {38, SHIFT, 190}, },
			{{-1, ERROR, 118}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 119}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 120}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 121}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 122}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 123}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 124}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 125}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 126}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 127}, {10, SHIFT, 200}, {13, SHIFT, 130}, {14, SHIFT, 131}, },
			{{-1, REDUCE, 109}, },
			{{-1, ERROR, 129}, {42, SHIFT, 201}, },
			{{-1, ERROR, 130}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 131}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 132}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 133}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 134}, {9, SHIFT, 73}, {13, SHIFT, 74}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 135}, {45, SHIFT, 209}, },
			{{-1, ERROR, 136}, {45, SHIFT, 210}, },
			{{-1, ERROR, 137}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 138}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 139}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 140}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 141}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 142}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 143}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 144}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 145}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 146}, {9, SHIFT, 60}, {21, SHIFT, 61}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 149}, {48, SHIFT, 223}, {51, SHIFT, 224}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 130}, {4, REDUCE, 117}, {10, REDUCE, 117}, {13, REDUCE, 117}, {14, REDUCE, 117}, {15, REDUCE, 117}, {16, REDUCE, 117}, {17, REDUCE, 117}, },
			{{-1, REDUCE, 131}, },
			{{-1, ERROR, 157}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 158}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 159}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 160}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 161}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 162}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 163}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 164}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 165}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 166}, {10, SHIFT, 236}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, REDUCE, 23}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 169}, {18, SHIFT, 237}, {19, SHIFT, 238}, {20, SHIFT, 239}, {22, SHIFT, 240}, {23, SHIFT, 241}, {24, SHIFT, 242}, {25, SHIFT, 243}, {26, SHIFT, 244}, {27, SHIFT, 245}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 171}, {9, SHIFT, 171}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 111}, {15, SHIFT, 104}, {16, SHIFT, 105}, {17, SHIFT, 106}, },
			{{-1, REDUCE, 110}, {15, SHIFT, 104}, {16, SHIFT, 105}, {17, SHIFT, 106}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 134}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 189}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 190}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 191}, {10, SHIFT, 249}, },
			{{-1, ERROR, 192}, {10, SHIFT, 250}, },
			{{-1, ERROR, 193}, {10, SHIFT, 251}, },
			{{-1, ERROR, 194}, {10, SHIFT, 252}, },
			{{-1, ERROR, 195}, {10, SHIFT, 253}, },
			{{-1, ERROR, 196}, {10, SHIFT, 254}, },
			{{-1, ERROR, 197}, {10, SHIFT, 255}, },
			{{-1, ERROR, 198}, {10, SHIFT, 256}, },
			{{-1, ERROR, 199}, {10, SHIFT, 257}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 201}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, },
			{{-1, ERROR, 202}, {39, SHIFT, 259}, {42, SHIFT, 201}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 100}, {15, SHIFT, 132}, {16, SHIFT, 133}, {17, SHIFT, 134}, },
			{{-1, REDUCE, 99}, {15, SHIFT, 132}, {16, SHIFT, 133}, {17, SHIFT, 134}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 103}, },
			{{-1, REDUCE, 104}, },
			{{-1, ERROR, 209}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 210}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 211}, {10, SHIFT, 263}, },
			{{-1, ERROR, 212}, {10, SHIFT, 264}, },
			{{-1, ERROR, 213}, {10, SHIFT, 265}, },
			{{-1, ERROR, 214}, {10, SHIFT, 266}, },
			{{-1, ERROR, 215}, {10, SHIFT, 267}, },
			{{-1, ERROR, 216}, {10, SHIFT, 268}, },
			{{-1, ERROR, 217}, {10, SHIFT, 269}, },
			{{-1, ERROR, 218}, {10, SHIFT, 270}, },
			{{-1, ERROR, 219}, {10, SHIFT, 271}, },
			{{-1, ERROR, 220}, {10, SHIFT, 272}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, ERROR, 221}, {10, SHIFT, 273}, },
			{{-1, ERROR, 222}, {18, SHIFT, 274}, {19, SHIFT, 275}, {20, SHIFT, 276}, {22, SHIFT, 277}, {23, SHIFT, 278}, {24, SHIFT, 279}, {25, SHIFT, 280}, {26, SHIFT, 281}, {27, SHIFT, 282}, },
			{{-1, ERROR, 223}, {53, SHIFT, 147}, {59, SHIFT, 22}, },
			{{-1, ERROR, 224}, {53, SHIFT, 147}, {59, SHIFT, 22}, },
			{{-1, ERROR, 225}, {48, SHIFT, 223}, },
			{{-1, ERROR, 226}, {45, SHIFT, 286}, },
			{{-1, ERROR, 227}, {10, SHIFT, 287}, },
			{{-1, ERROR, 228}, {10, SHIFT, 288}, },
			{{-1, ERROR, 229}, {10, SHIFT, 289}, },
			{{-1, ERROR, 230}, {10, SHIFT, 290}, },
			{{-1, ERROR, 231}, {10, SHIFT, 291}, },
			{{-1, ERROR, 232}, {10, SHIFT, 292}, },
			{{-1, ERROR, 233}, {10, SHIFT, 293}, },
			{{-1, ERROR, 234}, {10, SHIFT, 294}, },
			{{-1, ERROR, 235}, {10, SHIFT, 295}, },
			{{-1, REDUCE, 130}, },
			{{-1, ERROR, 237}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 238}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 239}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 240}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 241}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 242}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 243}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 244}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 245}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 246}, {10, SHIFT, 305}, {13, SHIFT, 102}, {14, SHIFT, 103}, },
			{{-1, REDUCE, 69}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 70}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 249}, {38, SHIFT, 306}, },
			{{-1, ERROR, 250}, {38, SHIFT, 307}, },
			{{-1, ERROR, 251}, {38, SHIFT, 308}, },
			{{-1, ERROR, 252}, {38, SHIFT, 309}, },
			{{-1, ERROR, 253}, {38, SHIFT, 310}, },
			{{-1, ERROR, 254}, {38, SHIFT, 311}, },
			{{-1, ERROR, 255}, {38, SHIFT, 312}, },
			{{-1, ERROR, 256}, {38, SHIFT, 313}, },
			{{-1, ERROR, 257}, {38, SHIFT, 314}, },
			{{-1, ERROR, 258}, {6, SHIFT, 315}, },
			{{-1, ERROR, 259}, {6, SHIFT, 316}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 261}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 317}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 262}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 318}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 263}, {45, SHIFT, 319}, },
			{{-1, ERROR, 264}, {45, SHIFT, 320}, },
			{{-1, ERROR, 265}, {45, SHIFT, 321}, },
			{{-1, ERROR, 266}, {45, SHIFT, 322}, },
			{{-1, ERROR, 267}, {45, SHIFT, 323}, },
			{{-1, ERROR, 268}, {45, SHIFT, 324}, },
			{{-1, ERROR, 269}, {45, SHIFT, 325}, },
			{{-1, ERROR, 270}, {45, SHIFT, 326}, },
			{{-1, ERROR, 271}, {45, SHIFT, 327}, },
			{{-1, ERROR, 272}, {3, SHIFT, 328}, },
			{{-1, ERROR, 273}, {3, SHIFT, 329}, },
			{{-1, ERROR, 274}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 275}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 276}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 277}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 278}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 279}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 280}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 281}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, ERROR, 282}, {9, SHIFT, 96}, {53, SHIFT, 39}, {54, SHIFT, 40}, {55, SHIFT, 41}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 285}, {45, SHIFT, 339}, },
			{{-1, ERROR, 286}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 117}, },
			{{-1, ERROR, 306}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 307}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 308}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 309}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 310}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 311}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 312}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 313}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 314}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 315}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 316}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 317}, {3, SHIFT, 352}, },
			{{-1, ERROR, 318}, {3, SHIFT, 353}, },
			{{-1, ERROR, 319}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 320}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 321}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 322}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 323}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 324}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 325}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 326}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 327}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 330}, {10, SHIFT, 363}, },
			{{-1, ERROR, 331}, {10, SHIFT, 364}, },
			{{-1, ERROR, 332}, {10, SHIFT, 365}, },
			{{-1, ERROR, 333}, {10, SHIFT, 366}, },
			{{-1, ERROR, 334}, {10, SHIFT, 367}, },
			{{-1, ERROR, 335}, {10, SHIFT, 368}, },
			{{-1, ERROR, 336}, {10, SHIFT, 369}, },
			{{-1, ERROR, 337}, {10, SHIFT, 370}, },
			{{-1, ERROR, 338}, {10, SHIFT, 371}, },
			{{-1, ERROR, 339}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 340}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {52, SHIFT, 373}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 62}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 60}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 61}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 63}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 64}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 66}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 65}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 67}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 68}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 29}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 351}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {43, SHIFT, 374}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 354}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 375}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 355}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 376}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 356}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 377}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 357}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 378}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 358}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 379}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 359}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 380}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 360}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 381}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 361}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 382}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 362}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {46, SHIFT, 383}, {47, SHIFT, 20}, {49, SHIFT, 21}, {59, SHIFT, 22}, },
			{{-1, ERROR, 363}, {3, SHIFT, 384}, },
			{{-1, ERROR, 364}, {3, SHIFT, 385}, },
			{{-1, ERROR, 365}, {3, SHIFT, 386}, },
			{{-1, ERROR, 366}, {3, SHIFT, 387}, },
			{{-1, ERROR, 367}, {3, SHIFT, 388}, },
			{{-1, ERROR, 368}, {3, SHIFT, 389}, },
			{{-1, ERROR, 369}, {3, SHIFT, 390}, },
			{{-1, ERROR, 370}, {3, SHIFT, 391}, },
			{{-1, ERROR, 371}, {3, SHIFT, 392}, },
			{{-1, ERROR, 372}, {34, SHIFT, 15}, {35, SHIFT, 16}, {37, SHIFT, 17}, {41, SHIFT, 18}, {44, SHIFT, 19}, {47, SHIFT, 20}, {49, SHIFT, 21}, {52, SHIFT, 393}, {59, SHIFT, 22}, },
			{{-1, ERROR, 373}, {3, SHIFT, 394}, },
			{{-1, ERROR, 374}, {3, SHIFT, 395}, },
			{{-1, ERROR, 375}, {3, SHIFT, 396}, },
			{{-1, ERROR, 376}, {3, SHIFT, 397}, },
			{{-1, ERROR, 377}, {3, SHIFT, 398}, },
			{{-1, ERROR, 378}, {3, SHIFT, 399}, },
			{{-1, ERROR, 379}, {3, SHIFT, 400}, },
			{{-1, ERROR, 380}, {3, SHIFT, 401}, },
			{{-1, ERROR, 381}, {3, SHIFT, 402}, },
			{{-1, ERROR, 382}, {3, SHIFT, 403}, },
			{{-1, ERROR, 383}, {3, SHIFT, 404}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 393}, {3, SHIFT, 405}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 98}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 23}, {20, 48}, {53, 87}, {189, 247}, {190, 248}, {209, 261}, {210, 262}, {286, 340}, {306, 341}, {307, 342}, {308, 343}, {309, 344}, {310, 345}, {311, 346}, {312, 347}, {313, 348}, {314, 349}, {315, 350}, {316, 351}, {319, 354}, {320, 355}, {321, 356}, {322, 357}, {323, 358}, {324, 359}, {325, 360}, {326, 361}, {327, 362}, {339, 372}, },
			{{-1, 62}, },
			{{-1, 56}, {43, 59}, },
			{{-1, 202}, },
			{{-1, 203}, {202, 260}, },
			{{-1, 10}, },
			{{-1, 11}, {10, 24}, },
			{{-1, 12}, },
			{{-1, 3}, },
			{{-1, 13}, },
			{{-1, 25}, {21, 49}, {38, 57}, {43, 57}, {44, 63}, {45, 63}, {46, 75}, {47, 63}, {52, 75}, {60, 63}, {61, 97}, {73, 75}, {74, 75}, {84, 148}, {91, 153}, {96, 63}, {100, 63}, {102, 172}, {103, 172}, {104, 172}, {105, 172}, {106, 172}, {107, 97}, {108, 97}, {109, 97}, {110, 97}, {111, 97}, {112, 97}, {113, 97}, {114, 97}, {115, 97}, {118, 97}, {119, 97}, {120, 97}, {121, 97}, {122, 97}, {123, 97}, {124, 97}, {125, 97}, {126, 97}, {130, 75}, {131, 75}, {132, 75}, {133, 75}, {134, 75}, {137, 97}, {138, 97}, {139, 97}, {140, 97}, {141, 97}, {142, 97}, {143, 97}, {144, 97}, {145, 97}, {146, 63}, {157, 97}, {158, 97}, {159, 97}, {160, 97}, {161, 97}, {162, 97}, {163, 97}, {164, 97}, {165, 97}, {171, 172}, {223, 148}, {224, 148}, {237, 97}, {238, 97}, {239, 97}, {240, 97}, {241, 97}, {242, 97}, {243, 97}, {244, 97}, {245, 97}, {274, 97}, {275, 97}, {276, 97}, {277, 97}, {278, 97}, {279, 97}, {280, 97}, {281, 97}, {282, 97}, },
			{{-1, 98}, {14, 42}, {44, 64}, {45, 64}, {46, 76}, {47, 64}, {52, 76}, {60, 64}, {73, 76}, {74, 76}, {96, 64}, {100, 64}, {102, 173}, {103, 173}, {104, 173}, {105, 173}, {106, 173}, {130, 76}, {131, 76}, {132, 76}, {133, 76}, {134, 76}, {146, 64}, {171, 173}, {201, 258}, },
			{{-1, 26}, {23, 51}, {48, 51}, {87, 51}, {247, 51}, {248, 51}, {261, 51}, {262, 51}, {340, 51}, {341, 51}, {342, 51}, {343, 51}, {344, 51}, {345, 51}, {346, 51}, {347, 51}, {348, 51}, {349, 51}, {350, 51}, {351, 51}, {354, 51}, {355, 51}, {356, 51}, {357, 51}, {358, 51}, {359, 51}, {360, 51}, {361, 51}, {362, 51}, {372, 51}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 149}, {223, 283}, {224, 284}, },
			{{-1, 225}, },
			{{-1, 226}, {225, 285}, },
			{{-1, 29}, },
			{{-1, 55}, },
			{{-1, 30}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 33}, },
			{{-1, 34}, },
			{{-1, 35}, },
			{{-1, 36}, },
			{{-1, 77}, {52, 86}, {73, 127}, },
			{{-1, 78}, {130, 204}, {131, 205}, },
			{{-1, 79}, {74, 128}, {132, 206}, {133, 207}, {134, 208}, },
			{{-1, 65}, {45, 70}, {47, 80}, {60, 93}, {96, 166}, {100, 167}, {146, 220}, {171, 246}, },
			{{-1, 66}, {102, 174}, {103, 175}, },
			{{-1, 67}, {104, 176}, {105, 177}, {106, 178}, },
			{{-1, 94}, {44, 68}, {45, 71}, {47, 81}, {100, 168}, {146, 221}, },
			{{-1, 179}, {44, 69}, {45, 72}, {47, 82}, {60, 95}, {61, 99}, {96, 95}, {100, 169}, {146, 222}, },
			{{-1, 180}, {108, 181}, {109, 182}, {110, 183}, {111, 184}, {112, 185}, {113, 186}, {114, 187}, {115, 188}, {118, 191}, {119, 192}, {120, 193}, {121, 194}, {122, 195}, {123, 196}, {124, 197}, {125, 198}, {126, 199}, {137, 211}, {138, 212}, {139, 213}, {140, 214}, {141, 215}, {142, 216}, {143, 217}, {144, 218}, {145, 219}, {157, 227}, {158, 228}, {159, 229}, {160, 230}, {161, 231}, {162, 232}, {163, 233}, {164, 234}, {165, 235}, {237, 296}, {238, 297}, {239, 298}, {240, 299}, {241, 300}, {242, 301}, {243, 302}, {244, 303}, {245, 304}, {274, 330}, {275, 331}, {276, 332}, {277, 333}, {278, 334}, {279, 335}, {280, 336}, {281, 337}, {282, 338}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'const', 'real', 'inteiro', 'caractere'",
			"expecting: ':'",
			"expecting: 'const', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'real', 'inteiro', 'caractere', id",
			"expecting: 'fim.'",
			"expecting: inteiro, caractere, real",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: '<-', ';', ',', '[', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<', 'faca', 'ate', 'de', 'passo'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: '<-'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'caso', 'fim avalie', 'enquanto', 'fim enquanto', 'repita', 'ate', 'para', 'fim para', id",
			"expecting: 'senao', 'fim se'",
			"expecting: ';', ',', ':', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ';'",
			"expecting: '(', 'nao', inteiro, caractere, real, id",
			"expecting: '(', '-', inteiro, caractere, real, id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', id",
			"expecting: 'de'",
			"expecting: inteiro",
			"expecting: 'fim se'",
			"expecting: ';', ','",
			"expecting: ';', ',', ')'",
			"expecting: ',', ')'",
			"expecting: '(', inteiro, caractere, real, id",
			"expecting: ',', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ',', ')', '-', '+'",
			"expecting: ',', ')', '-', '+', '*', '/', 'resto'",
			"expecting: 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: ')', '-', '+'",
			"expecting: ')'",
			"expecting: ';', ')', '-', '+', '*', '/', 'resto'",
			"expecting: inteiro, id",
			"expecting: ']'",
			"expecting: ';', '-', '+'",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'entao'",
			"expecting: 'caso'",
			"expecting: 'faca'",
			"expecting: 'faca', 'ate', 'passo'",
			"expecting: 'ate', 'passo'",
			"expecting: '<-', ';', ',', ')', '-', '+', '*', '/', 'resto', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<', 'faca', 'ate', 'de', 'passo'",
			"expecting: ',', ')', 'e', 'ou', 'xor', '=', '<>', '<=', '>=', '>', '<'",
			"expecting: 'senao', 'caso'",
			"expecting: 'ate'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'caso', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 1, 5, 5, 5, 6, 6, 7, 5, 8, 9, 9, 9, 9, 9, 10, 1, 11, 12, 6, 13, 14, 14, 14, 15, 14, 14, 14, 14, 14, 14, 14, 2, 1, 16, 16, 16, 17, 1, 18, 18, 19, 18, 20, 21, 22, 14, 19, 10, 17, 23, 24, 25, 6, 26, 18, 27, 26, 28, 28, 29, 30, 30, 26, 31, 32, 33, 31, 19, 19, 34, 34, 32, 34, 34, 32, 33, 31, 9, 35, 36, 37, 38, 14, 17, 6, 1, 17, 32, 33, 31, 18, 26, 26, 26, 18, 17, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 39, 39, 27, 27, 27, 27, 27, 27, 27, 27, 27, 32, 34, 40, 19, 19, 19, 19, 19, 41, 41, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 42, 42, 43, 44, 14, 14, 25, 14, 28, 45, 27, 27, 27, 27, 27, 27, 27, 27, 27, 32, 29, 26, 31, 14, 27, 30, 30, 30, 30, 30, 30, 30, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 10, 10, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 8, 46, 46, 34, 34, 34, 34, 34, 10, 10, 33, 33, 33, 33, 33, 33, 33, 33, 33, 32, 33, 31, 35, 35, 47, 41, 33, 33, 33, 33, 33, 33, 33, 33, 33, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 32, 48, 48, 39, 39, 39, 39, 39, 39, 39, 39, 39, 5, 5, 46, 49, 49, 41, 41, 41, 41, 41, 41, 41, 41, 41, 17, 17, 27, 27, 27, 27, 27, 27, 27, 27, 27, 41, 47, 41, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 26, 26, 26, 26, 26, 26, 26, 26, 26, 30, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 17, 17, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14, 33, 33, 33, 33, 33, 33, 33, 33, 33, 10, 50, 48, 48, 48, 48, 48, 48, 48, 48, 48, 51, 52, 14, 14, 49, 49, 49, 49, 49, 49, 49, 49, 49, 17, 17, 17, 17, 17, 17, 17, 17, 17, 50, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
